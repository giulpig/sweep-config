// Appart from main ZMK, requires these 
// PR# 1366 (https://github.com/zmkfirmware/zmk/pull/1366) - Swapper (tri-layer-state)
// PR# 1451 (https://github.com/zmkfirmware/zmk/pull/1451) - Smart Caps (for &num_word)

// ZMK includes
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// mouse keys copied from urob's keymap
#include <dt-bindings/zmk/mouse.h>

&mmv {
  acceleration-exponent = <1>;      // 1
  time-to-max-speed-ms = <1500>;    // 40
  delay-ms = <0>;                   // 0
};

&mwh {
  acceleration-exponent = <1>;      // 0
  time-to-max-speed-ms = <5000>;    // 40
  delay-ms = <0>;                   // 10
};

#define U_MOUSE_MOVE_MAX 1250       // 600
#define U_MOUSE_SCROLL_MAX 100      // 10

#undef MOVE_UP
#undef MOVE_DOWN
#undef MOVE_LEFT
#undef MOVE_RIGHT
#define MOVE_UP MOVE_VERT(-U_MOUSE_MOVE_MAX)
#define MOVE_DOWN MOVE_VERT(U_MOUSE_MOVE_MAX)
#define MOVE_LEFT MOVE_HOR(-U_MOUSE_MOVE_MAX)
#define MOVE_RIGHT MOVE_HOR(U_MOUSE_MOVE_MAX)

#undef SCROLL_UP
#undef SCROLL_DOWN
#undef SCROLL_LEFT
#undef SCROLL_RIGHT
#define SCROLL_UP SCROLL_VERT(U_MOUSE_SCROLL_MAX)
#define SCROLL_DOWN SCROLL_VERT(-U_MOUSE_SCROLL_MAX)
#define SCROLL_LEFT SCROLL_HOR(-U_MOUSE_SCROLL_MAX)
#define SCROLL_RIGHT SCROLL_HOR(U_MOUSE_SCROLL_MAX)

#define U_BTN1 &mkp MB1
#define U_BTN2 &mkp MB2
#define U_BTN3 &mkp MB3
#define U_MS_U &mmv MOVE_UP
#define U_MS_D &mmv MOVE_DOWN
#define U_MS_L &mmv MOVE_LEFT
#define U_MS_R &mmv MOVE_RIGHT
#define U_WH_U &mwh SCROLL_UP
#define U_WH_D &mwh SCROLL_DOWN
#define U_WH_L &mwh SCROLL_LEFT
#define U_WH_R &mwh SCROLL_RIGHT

// NAV layer special command keys for macOS usage
#define GO_FWRD &kp LG(RBKT) // Forward button on browser and other apps
#define GO_BACK &kp LG(LBKT) // Back button on browser and other apps
#define CO_PTAB &kp LS(LC(TAB)) // Previous Tab
#define CO_NTAB &kp LC(TAB) // Next Tab

// WNAV layer special command keys for Windows functions
#define WGO_FWRD &kp LA(RARW) // Forward button on browser and other apps
#define WGO_BACK &kp LA(LARW) // Back button on browser and other apps
#define WCO_PTAB &kp LS(LC(TAB)) // Previous Tab
#define WCO_NTAB &kp LC(TAB) // Next Tab

// Media keys
#define ME_VOLD &kp C_VOL_DN
#define ME_VOLU &kp C_VOL_UP
#define ME_PLAY &kp C_PLAY_PAUSE

// Default layers with macOS and Windows layer toggles
#define DEF 0
#define COLEMAK 1
#define WDEF 2

#define NUM 3 // numpad for &num_word

// macOS layers (CASG mods)
#define NAV 4
#define SYM 5
#define FUN 6

// Windows layers (GASC mods)
#define WNAV 7
#define WSYM 8
#define WFUN 9

// mouse keys
#define MOUSE 10

// AOE layers
#define AOED 11
#define AOE2 12
#define AOE3 13

// Customized ZMK existing behaviors
&sk {
        release-after-ms = <10000>; // Default is 1000 ms. Added an extra long timeout to make clicking with modifiers easier. Cancel keys on layer toggles make it easy to dismiss mods.
        quick-release;
    };

&lt {
        flavor = "balanced";
    };

&caps_word { // Uses PR #1451 continue list fucntionality to allow for accents and not canceling caps_word on layer changes
    continue-list = <
                    UNDERSCORE MINUS
                    SQT CARET TILDE GRAVE
                    UARW DARW RARW LARW
                    K_CANCEL
                    BACKSPACE DELETE
                >;
    /delete-property/ ignore-modifiers; // Using modifiers as interrupters, avoiding CMD+Shift+S activations when I hit CMD+S.
};

/ {
    combos {
        compatible = "zmk,combos";
        
        // macOS combos
        combo_spotlight_alfred {
            timeout-ms = <80>;
            key-positions = <13 16>; // F J
            layers = <DEF>; // Only available in the DEF layer
            bindings = <&kp LG(SPC)>;
        };
        combo_shortcat {
            timeout-ms = <80>;
            key-positions = <12 17>; // D K
            layers = <DEF>; // Only available in the DEF layer
            bindings = <&kp LC(LS(SPC))>;
        };
        combo_toggle_nav_on_left_thumb {
            timeout-ms = <120>;
            key-positions = <30 31>; // SPC SYM
            layers = <DEF NAV>;
            bindings = <&tog NAV>;
        };

        // Windows combos
        combo_toggle_windows_specific_layers { // those swap GUI and CONTROL keys from dominant fingers
            timeout-ms = <80>;
            key-positions = <10 19>; // A "
            layers = <FUN WFUN>;
            bindings = <&tog WDEF>;
        };
        combo_windows_start_menu { // Mapped to the same spot I use with spotlight on macOS
            timeout-ms = <80>;
            key-positions = <13 16>; // F J
            layers = <WDEF>; // Only available in the Windows DEF layer
            bindings = <&kp LGUI>;
        };
        combo_toggle_wnav_on_left_thumb {
            timeout-ms = <120>;
            key-positions = <30 31>; // SPC SYM
            layers = <WDEF WNAV>;
            bindings = <&tog WNAV>;
        };

        // Special layer toggles
        combo_colemak {
            timeout-ms = <180>;
            key-positions = <0 1 2 3 6 7 8 9>; // All 8 home row positions on FUN
            layers = <FUN>;
            bindings = <&tog COLEMAK>;
        };
        combo_aoe {
            timeout-ms = <80>;
            key-positions = <9 19 29>; // P ' : (right column keys on FUN or AOED layers)
            layers = <DEF FUN AOED>;
            bindings = <&tog AOED>;
        };

        // Multimedia and keyboard features
        combo_mute {
            timeout-ms = <80>;
            key-positions = <4 14>; // Vol up + down keys
            layers = <NAV WNAV>; // Only available in the NAV layer
            bindings = <&kp C_MUTE>;
        };
        combo_num_word_on_right_thumb {
            timeout-ms = <120>;
            key-positions = <32 33>; // SPC SYM
            layers = <DEF WDEF NUM>;
            bindings = <&num_word>;
        };
        
        // bluetooth combos
        combo_toggle_bt0_connection { // MacBook
            timeout-ms = <80>;
            key-positions = <3 4>;
            layers = <FUN>; 
            bindings = <&bt BT_SEL 0>;
        };
        combo_toggle_bt1_connection { // iPad
            timeout-ms = <80>;
            key-positions = <13 14>;
            layers = <FUN>; 
            bindings = <&bt BT_SEL 1>;
        };
        combo_toggle_bt2_connection { // open
            timeout-ms = <80>;
            key-positions = <23 24>;
            layers = <FUN>; 
            bindings = <&bt BT_SEL 2>;
        };
        combo_trigger_bootloader {
            timeout-ms = <80>;
            key-positions = <20 21>;
            layers = <FUN>; 
            bindings = <&bootloader>;
        };
        combo_clear_current_bluetooth_profile {
            timeout-ms = <80>;
            key-positions = <28 29>;
            layers = <FUN>; 
            bindings = <&bt BT_CLR>;
        };
    };
    
    behaviors {
        // Tap dances
        shift_cw: tap_dance_caps_word {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_CAPS_WORD";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp LSHFT>, <&caps_word>;
        };        
        nextprev: tap_dance_media_next_prev {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_NEXT_PREV_MEDIA";
            #binding-cells = <0>;
                tapping-term-ms = <200>;
            bindings = <&kp C_NEXT>, <&kp C_PREV>;
        };
        z_swish: z_swish_hold_tap { // Remaping CAPS to fn let me use fn shortcuts on macOS and iPadOS at the expense of the CAPS LOCK
            compatible = "zmk,behavior-hold-tap";
            label = "z_swish";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        lt_mouse: lt_mouse_hold_tap { // Mouse-layer &lt on DEF semicolon
            compatible = "zmk,behavior-hold-tap";
            label = "lt_mouse";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;
        };

        // Swapper        
        swapper: swapper { // Swapper for apps in macOS 
            compatible = "zmk,behavior-tri-state"; // requires tri-state PR #1366 (not yet merged into main)
            label = "SWAPPER";
            #binding-cells = <0>;
            bindings = <&kt LCMD>, <&kp TAB>, <&kt LCMD>;
            ignored-key-positions = <3 7 9 16 17 18 28 29>; // Shift, Arrow key positions and DEL/BSPC to quit app/close window from altTab
        };
        wswapper: windows_swapper { // Swapper for windows in Windows
            compatible = "zmk,behavior-tri-state"; // requires tri-state PR #1366 (not yet merged into main)
            label = "WINDOWS_SWAPPER";
            #binding-cells = <0>;
            bindings = <&kt LALT>, <&kp TAB>, <&kt LALT>;
            ignored-key-positions = <3>; // Shift key on NAV to allow for backwards movement
        };
        
        // num_word - Documentation in PR# 1451 (https://github.com/zmkfirmware/zmk/pull/1451), got it from urob's repo
        num_word: behavior_num_word {
			compatible = "zmk,behavior-caps-word";
			label = "NUM_WORD_KEY";
			#binding-cells = <0>;
                        layers = <NUM>;         // layer to be toggled
                        // ignore-numbers;      // numbers won't deactivate the layer, hence &num_word   // opted to add them to continue list in order to not have % continue this function
                        // ignore-modifiers;    // modifiers won't deactivate the layer, hence &num_word
			            continue-list =         // list keycodes that will not cancel &numword
                            <   N0 N1 N2 N3 N4 N5 N6 N7 N8 N9
                                BACKSPACE DELETE 
                                DOT COMMA SQT DQT COLON SEMICOLON 
                                SLASH MINUS PLUS ASTRK EQUAL
                                TAB
                                LPAR LBKT LBRC PIPE
                            >;       
        };
     };
    
    macros {        
        la_nav: cancel_queued_os_mods_and_toggle_nav { 
            label = "LA_NAV";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            bindings
                = <&macro_press &mo NAV>
                , <&macro_tap &kp K_CANCEL>
                , <&macro_pause_for_release>
                , <&macro_release &mo NAV>
                ;
        };
        la_sym: cancel_queued_os_mods_and_toggle_sym { 
            label = "LA_SYM";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            bindings
                = <&macro_press &mo SYM>
                , <&macro_tap &kp K_CANCEL>
                , <&macro_pause_for_release>
                , <&macro_release &mo SYM>
                ;
        };
        la_wnav: cancel_queued_os_mods_and_toggle_windows_nav { 
            label = "LA_WNAV";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            bindings
                = <&macro_press &mo WNAV>
                , <&macro_tap &kp K_CANCEL>
                , <&macro_pause_for_release>
                , <&macro_release &mo WNAV>
                ;
        };
        la_wsym: cancel_queued_os_mods_and_toggle_windows_sym { 
            label = "LA_WSYM";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            bindings
                = <&macro_press &mo WSYM>
                , <&macro_tap &kp K_CANCEL>
                , <&macro_pause_for_release>
                , <&macro_release &mo WSYM>
                ;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
        macos_tri_layer {
            if-layers = <NAV SYM>;
            then-layer = <FUN>;
        };
        windows_tri_layer {
            if-layers = <WNAV WSYM>;
            then-layer = <WFUN>;
        };
    };

    keymap {
        compatible = "zmk,keymap";
  
        default_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│  Q       │  W       │  E       │  R       │  T       │   │  Y       │  U       │  I       │  O       │  P       │
    &lt_mouse MOUSE Q   &kp W      &kp E      &kp R      &kp T          &kp Y      &kp U      &kp I      &kp O      &kp P
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  A       │  S       │  D       │  F       │  G       │   │  H       │  J       │  K       │  L       │  ' "     │
             &kp A      &kp S      &kp D      &kp F      &kp G          &kp H      &kp J      &kp K      &kp L      &kp SQT
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  Z       │  X       │  C       │  V       │  B       │   │  N       │  M       │  , <     │  . >     │  ; :     │
    &z_swish CAPS Z     &kp X      &kp C      &kp V      &kp B          &kp N      &kp M      &kp COMMA  &kp DOT    &lt_mouse MOUSE SEMI
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                              &la_nav    &shift_cw      &kp SPC    &la_sym
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };
        
        colemak_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│  Q       │  W       │  F       │  P       │  G       │   │  J       │  L       │  U       │  Y       │  ' "     │
    &lt_mouse MOUSE Q   &kp W      &kp F      &kp P      &kp G          &kp J      &kp L      &kp U      &kp Y      &kp SQT
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  A       │  R       │  S       │  T       │  D       │   │  H       │  N       │  E       │  I       │  O       │
             &kp A      &kp R      &kp S      &kp T      &kp D          &kp H      &kp N      &kp E      &kp I      &kp O
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  Z       │  X       │  C       │  V       │  B       │   │  K       │  M       │  , <     │  . >     │  ; :     │
    &z_swish CAPS Z     &kp X      &kp C      &kp V      &kp B          &kp K      &kp M      &kp COMMA  &kp DOT    &lt_mouse MOUSE SEMI
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                              &la_nav    &shift_cw      &kp SPC    &la_sym
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };

        windows_default_layer { // Layer keys map to swapped GUI and CONTROL mods in subsequent layers for easier Windows usage
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│  Q       │  W       │  E       │  R       │  T       │   │  Y       │  U       │  I       │  O       │  P       │
            &kp Q      &kp W      &kp E      &kp R      &kp T          &kp Y      &kp U      &kp I      &kp O      &kp P
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  A       │  S       │  D       │  F       │  G       │   │  H       │  J       │  K       │  L       │ ' "      │
            &kp A      &kp S      &kp D      &kp F      &kp G          &kp H      &kp J      &kp K      &kp L      &kp SQT
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  Z       │  X       │  C       │  V       │  B       │   │  N       │  M       │ , <      │ . >      │ ; :      │
            &kp Z      &kp X      &kp C      &kp V      &kp B          &kp N      &kp M      &kp COMMA  &kp DOT    &kp SEMI
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &la_wnav   &shift_cw      &kp SPC    &la_wsym
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };
 
        numword_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│ TAB      │  {       │  [       │  (       │ )        │   │ DELETE   │ 7        │ 8        │ 9        │ BACKSPACE|
            &kp TAB    &kp LBRC   &kp LBKT   &kp LPAR   &kp RPAR      &kp DELETE  &kp N7     &kp N8     &kp N9     &kp BSPC
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│ -        │ *        │ =        │ _        │ $        │   │ ,        │ 4        │ 5        │ 6        │ .        │
            &kp MINUS  &kp ASTRK  &kp EQUAL  &kp UNDER  &kp DLLR       &kp COMMA  &kp N4     &kp N5     &kp N6     &kp DOT
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│ +        │ |        │  @       │  /       │  %       │   │ /        │ 1        │ 2        │ 3        │ :        |
            &kp PLUS   &kp PIPE   &kp AT     &kp FSLH   &kp PRCNT      &kp FSLH   &kp N1     &kp N2     &kp N3     &kp COLON
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &mo NAV   &kp K_CANCEL    &kp SPACE  &lt SYM N0
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };

        navigation_and_media_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│ TAB      │ SWAPPER  │ PREV. TAB│ NEXT TAB │ VOL. UP  │   │ PG UP    │ HOME     │ UP       │ END      │ BACKSPACE│
            &kp TAB    &swapper   CO_PTAB    CO_NTAB    ME_VOLU        &kp PG_UP  &kp HOME   &kp UARW   &kp END    &kp BSPC
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│ CTRL     │ ALT      │ SHIFT    │ CMD      │ VOL. DOWN│   | PG DOWN  │ LEFT     │ DOWN     │ RIGHT    │ ENTER    │
            &sk LCTRL  &sk LALT   &sk LSHFT  &sk LGUI   ME_VOLD        &kp PG_DN  &kp LARW   &kp DARW   &kp RARW   &kp ENTER
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│ UNDO     │ CUT      │ COPY     │ PASTE    | PLAY     │   │ NEXT/PREV│ BACK     │ FORWARD  │ Q (Quit) │ DELETE   │
            &z_swish  LG(Z)  &kp LG(X)  &kp LG(C)  &kp LG(V)  ME_PLAY        &nextprev  GO_BACK    GO_FWRD    &kp Q      &kp DEL
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &trans     &trans         &mt LSHFT SPC &trans
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };

        symbols_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│ ESC      │  {       │  [       │  (       │ ~        │   │ ^        │ )        │ ]        │ }        │  `       │
            &kp ESC    &kp LBRC   &kp LBKT   &kp LPAR   &kp TILDE      &kp CARET  &kp RPAR   &kp RBKT   &kp RBRC   &kp GRAVE
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│ -        │ *        │ =        │ _        │ $        │   │ #        │ CMD      │ SHIFT    │ ALT      │ CTRL     │
            &kp MINUS  &kp ASTRK  &kp EQUAL  &kp UNDER  &kp DLLR       &kp HASH    &sk RGUI   &sk RSHFT  &sk RALT   &sk RCTRL
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│ +        │ |        │  @       │  /       │  %       │   │ §        │ \        │ &        │ ?        │ !        │
            &kp PLUS   &kp PIPE   &kp AT     &kp FSLH   &kp PRCNT      &kp LA(N6) &kp BSLH   &kp AMPS   &kp QMARK  &kp EXCL
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &trans     &trans         &trans     &trans
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };

        tri_layer_function_number_row {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│ 1        │ 2        │ 3        │ 4        │ 5        │   │ 6        │ 7        │ 8        │ 9        │ 0        │
            &kp N1     &kp N2     &kp N3     &kp N4    &kp N5          &kp N6     &kp N7     &kp N8     &kp N9     &kp N0
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│ CTRL     │ ALT      │ SHIFT    │ CMD      │ F11      │   │ F12      │ CMD      │ SHIFT    │ ALT      │ CTRL     │
            &sk LCTRL  &sk LALT   &sk LSHFT  &sk LGUI   &kp F11        &kp F12    &sk RGUI   &sk RSHFT  &sk RALT   &sk RCTRL
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│ F1       │ F2       │ F3       │ F4       │ F5       │   │ F6       │ F7       │ F8       │ F9       │ F10      │
            &kp F1     &kp F2     &kp F3     &kp F4     &kp F5         &kp F6     &kp F7     &kp F8     &kp F9     &kp F10
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &trans     &trans         &trans    &trans
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };
        
        windows_navigation_and_media_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│ TAB      │ SWAPPER  │ PREV. TAB│ NEXT TAB │ VOL. UP  │   │ PG UP    │ HOME     │ UP       │ END      │ BACKSPACE│
            &kp TAB    &wswapper  WCO_PTAB   WCO_NTAB   ME_VOLU        &kp PG_UP  &kp HOME   &kp UARW   &kp END    &kp BSPC
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│ WIN      │ ALT      │ SHIFT    │ CTRL     │ VOL. DOWN│   | PG DOWN  │ LEFT     │ DOWN     │ RIGHT    │ ENTER    │
            &sk LGUI  &sk LALT   &sk LSHFT  &sk LCTRL   ME_VOLD        &kp PG_DN  &kp LARW   &kp DARW   &kp RARW   &kp ENTER
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│ UNDO     │ CUT      │ COPY     │ PASTE    | PLAY     │   │ NEXT/PREV│ BACK     │ FORWARD  │ `        │ DELETE   │
            &kp LC(Z)  &kp LC(X)  &kp LC(C)  &kp LC(V)  ME_PLAY        &nextprev  WGO_BACK   WGO_FWRD   &kp GRAVE  &kp DEL
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &trans     &trans         &mt LSHFT SPC &trans
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };

        windows_symbols_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│ ESC      │  {       │  [       │  (       │ ~        │   │ ^        │ )        │ ]        │ }        │  `       │
            &kp ESC    &kp LBRC   &kp LBKT   &kp LPAR   &kp TILDE      &kp CARET  &kp RPAR   &kp RBKT   &kp RBRC   &kp GRAVE
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│ -        │ *        │ =        │ +        │ $        │   │ #        │ CTRL     │ SHIFT    │ ALT      │ WIN      │
            &kp MINUS  &kp ASTRK  &kp EQUAL  &kp PLUS   &kp DLLR       &kp HASH   &sk RCTRL  &sk RSHFT  &sk RALT   &sk RGUI
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│ _        │ |        │  @       │  /       │  %       │   │ §        │ \        │ &        │ ?        │ !        │
            &kp UNDER  &kp PIPE   &kp AT     &kp FSLH   &kp PRCNT      &kp LA(N6) &kp BSLH   &kp AMPS   &kp QMARK  &kp EXCL
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &trans     &trans         &trans     &trans
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };

        windows_tri_layer_function_number_row {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│ 1        │ 2        │ 3        │ 4        │ 5        │   │ 6        │ 7        │ 8        │ 9        │ 0        │
            &kp N1     &kp N2     &kp N3     &kp N4    &kp N5          &kp N6     &kp N7     &kp N8     &kp N9     &kp N0
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│ WIN      │ ALT      │ SHIFT    │ CTRL     │ F11      │   │ F12      │ CTRL     │ SHIFT    │ ALT      │ WIN      │
            &sk LGUI  &sk LALT   &sk LSHFT  &sk LCTRL   &kp F11        &kp F12    &sk RCTRL  &sk RSHFT  &sk RALT   &sk RGUI
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│ F1       │ F2       │ F3       │ F4       │ F5       │   │ F6       │ F7       │ F8       │ F9       │ F10      │
            &kp F1     &kp F2     &kp F3     &kp F4     &kp F5         &kp F6     &kp F7     &kp F8     &kp F9     &kp F10
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &trans     &trans         &trans    &trans
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };
              
        mouse_keys {
            bindings = <
    
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│          │          │          │          │          │   │          │          │          │          │          │
            &none      &none      &none      &none      &none          U_WH_U     U_WH_D     U_MS_U     U_WH_U     &none
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│          │          │          │          │          │   │          │          │          │          │          │
            &none      &none      &none      &none      &none          U_WH_D     U_MS_L     U_MS_D     U_MS_R     &none
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│          │          │          │          │          │   │          │          │          │          │          │
            &none      &none      &none      &none      &none          &none      &none      &none      &none      &none
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &none      &none          U_BTN1      U_BTN2
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };

        aoe2_base_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│  Q       │  W       │  E       │  R       │  T       │   │          │          │          │          │          │
             &kp Q      &kp W      &kp E      &kp R      &kp T         &none      &none      &none      &none       &none
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  A       │  S       │  D       │  F       │  G       │   │          │          │          │          │          │
          &mt LCTRL A &mt LALT S &lt LCTRL D &mt LSHFT F &kp G         &none      &none      &none      &none       &none
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  Z       │  X       │  C       │  V       │  B       │   │          │          │          │          │          │
             &kp Z      &kp X      &kp C      &kp V      &kp B         &none      &none      &none      &none       &none
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                           &lt AOE2 ESC &lt AOE3 DOT  &none      &none
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };
        
        aoe2_groups_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│  2       │  3       │  4       │  5       │  6       │   │          │          │          │          │          │
             &kp N2     &kp N3     &kp N4     &kp N5     &kp N6        &none      &none      &none      &none       &none
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  7       │  8       │  9       │  0       │  Control │   │          │          │          │          │          │
             &kp N7      &kp N8     &kp N9    &kp N0     &sk LCTRL     &none      &none      &none      &none       &none
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│ SHIFT+,  │  SHIFT+. │ 1        │  H       │  Control │   │          │          │          │          │          │
        &kp LS(COMMA) &kp LS(DOT) &kp N1      &kp H      &sk LCTRL     &none      &none      &none      &none       &none
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                              &trans     &kp DEL    &none      &none
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };
        
        aoe2_select_all_buildings_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│ Mercado  │Blacksmith│ Univers. │  Templo  │  Univers.│   │          │          │          │          │          │
        &kp LS(LC(M)) &kp LS(LC(S)) &kp LS(LC(U)) &kp LS(LC(Y)) &kp LS(LC(U))    &none &none &none &none &none
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│ Arquearia│ Estábulos│ Quartéis │ Castelo  │ Oficinas │   │          │          │          │          │          │
        &kp LS(LC(A)) &kp LS(LC(L)) &kp LS(LC(B)) &kp LS(LC(V)) &kp LS(LC(K))    &none &none &none &none &none
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│ Lenha    │ Moinhos  │ Minas    │ Todos TCs│ TC       │   │          │          │          │          │          │
            &kp LC(Z) &kp LC(I)  &kp LS(G) &kp LC(LS(H))  &kp H                  &none &none &none &none &none
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                              &trans     &trans                 &none &none
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };
    };
};