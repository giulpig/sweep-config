// Appart from main ZMK, requires these 
// PR# 1366 (https://github.com/zmkfirmware/zmk/pull/1366) - Swapper (tri-layer-state)
// PR# 1451 (https://github.com/zmkfirmware/zmk/pull/1451) - Smart Caps (for &num_word)

// ZMK includes
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// Default layers with macOS and Windows layer toggles
#define DEF 0
#define WDEF 1

// macOS layers (CASG mods)
#define NAV 2
#define SYM 3
#define FUN 4

// Windows layers (GASC mods)
#define WNAV 5
#define WSYM 6
#define WFUN 7

// Customized ZMK existing behaviors
&sk {
        // release-after-ms = <500>; // default is 1000 ms
        quick-release;
    };

&caps_word { // Uses PR #1451 continue list fucntionality to allow for accents and not canceling caps_word on layer changes
    continue-list = <
                    UNDERSCORE MINUS
                    SQT CARET TILDE GRAVE
                    UARW DARW RARW LARW
                    K_CANCEL
                    BACKSPACE DELETE
                >;
    /delete-property/ ignore-modifiers; // Using modifiers as interrupters, avoiding CMD+Shift+S activations when I hit CMD+S.
};

/ {
    combos {
        compatible = "zmk,combos";
        
        // macOS combos
        combo_spotlight_alfred {
            timeout-ms = <80>;
            key-positions = <13 16>; // F J
            layers = <DEF>; // Only available in the Apple's DEF layer
            bindings = <&kp LG(SPC)>;
        };
        combo_shortcat {
            timeout-ms = <80>;
            key-positions = <12 17>; // D K
            layers = <DEF>; // Only available in the Apple's DEF layer
            bindings = <&kp LG(LS(SPC))>;
        };
        combo_qw_caps { // I use CAPS to emulate fn key in macOS and iPadOS
            timeout-ms = <80>;
            key-positions = <0 1>; // Q W
            layers = <DEF NAV>; // Only available in the Apple's DEF layer
            bindings = <&kp CAPS>;
        };
        combo_toggle_nav_on_left_thumb {
            timeout-ms = <120>;
            key-positions = <30 31>; // J K L
            layers = <DEF NAV>;
            bindings = <&tog NAV>;
        };
        
        // Windows combos
        combo_toggle_between_windows_and_apple_keys { // swap GUI and CONTROL keys placement for better OS-specific usage
            timeout-ms = <80>;
            key-positions = <10 19>; // A "
            layers = <FUN WFUN>;
            bindings = <&tog WDEF>;
        };
        combo_windows_start_menu { // mapped to the same spot I use to trigger spotlight/alfred on macOS and iPadOS
            timeout-ms = <80>;
            key-positions = <13 16>; // F J
            layers = <WDEF>; // Only available in the Windows' DEF layer
            bindings = <&kp LGUI>;
        };
        combo_toggle_wnav_on_left_thumb {
            timeout-ms = <120>;
            key-positions = <30 31>; // J K L
            layers = <WDEF WNAV>;
            bindings = <&tog WNAV>;
        };
        
        // Multimedia and keyboard features
        combo_mute {
            timeout-ms = <80>;
            key-positions = <4 14>; // Vol up + down keys
            layers = <NAV WNAV>; // Only available in the NAV layer, system agnostic
            bindings = <&kp C_MUTE>;
        };
        combo_trigger_bootloader {
            timeout-ms = <80>;
            key-positions = <20 21>;
            layers = <FUN>; 
            bindings = <&bootloader>;
        };

        // Bluetooth combos
        combo_toggle_bt0_connection { // MacBook
            timeout-ms = <80>;
            key-positions = <3 4>;
            layers = <FUN>; 
            bindings = <&bt BT_SEL 0>;
        };
        combo_toggle_bt1_connection { // iPad
            timeout-ms = <80>;
            key-positions = <13 14>;
            layers = <FUN>; 
            bindings = <&bt BT_SEL 1>;
        };
        combo_toggle_bt2_connection { // open
            timeout-ms = <80>;
            key-positions = <23 24>;
            layers = <FUN>; 
            bindings = <&bt BT_SEL 2>;
        };
        combo_clear_current_bluetooth_profile {
            timeout-ms = <80>;
            key-positions = <28 29>;
            layers = <FUN>; 
            bindings = <&bt BT_CLR>;
        };
    };
    
    behaviors {

        // Tap dances
        shift_cw: tap_dance_shift_and_caps_word {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_SHIFT_CAPS_WORD";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp LSHFT>, <&caps_word>;
        };        
        nextprev: tap_dance_media_for_next_and_prev {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_NEXT_PREV";
            #binding-cells = <0>;
                tapping-term-ms = <200>;
            bindings = <&kp C_NEXT>, <&kp C_PREV>;
        };

        // Swapper        
        swapper: swapper { // Swapper for macOS and iPadOS
            compatible = "zmk,behavior-tri-state"; // requires tri-state PR #1366 (not yet merged into main)
            label = "SWAPPER";
            #binding-cells = <0>;
            bindings = <&kt LCMD>, <&kp TAB>, <&kt LCMD>;
            ignored-key-positions = <3 7 9 16 17 18 28 29>; // Shift, Arrow key positions and DEL/BSPC to quit app/close window from altTab
        };
        wswapper: windows_swapper { // Swapper for Windows
            compatible = "zmk,behavior-tri-state"; // requires tri-state PR #1366 (not yet merged into main)
            label = "WINDOWS_SWAPPER";
            #binding-cells = <0>;
            bindings = <&kt LALT>, <&kp TAB>, <&kt LALT>;
            ignored-key-positions = <3>; // Shift key on WNAV to allow for backwards movement
        };
     };
    
    macros {        

        // Apple OS variants for layer + cancel key macros
        la_nav: cancel_queued_os_mods_and_toggle_nav { 
            label = "LA_NAV";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            bindings
                = <&macro_press &mo NAV>
                , <&macro_tap &kp K_CANCEL> // Cancel keys allow for deactivation of any previously queued mod on hitting a layer key
                , <&macro_pause_for_release>
                , <&macro_release &mo NAV>
                ;
        };
        la_sym: cancel_queued_os_mods_and_toggle_sym { 
            label = "LA_SYM";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            bindings
                = <&macro_press &mo SYM>
                , <&macro_tap &kp K_CANCEL> // Cancel keys allow for deactivation of any previously queued mod on hitting a layer key
                , <&macro_pause_for_release>
                , <&macro_release &mo SYM>
                ;
        };
        
        // Windows variants for layer + cancel key macros
        la_wnav: cancel_queued_os_mods_and_toggle_windows_nav { 
            label = "LA_WNAV";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            bindings
                = <&macro_press &mo WNAV>
                , <&macro_tap &kp K_CANCEL> // Cancel keys allow for deactivation of any previously queued mod on hitting a layer key
                , <&macro_pause_for_release>
                , <&macro_release &mo WNAV>
                ;
        };
        la_wsym: cancel_queued_os_mods_and_toggle_windows_sym { 
            label = "LA_WSYM";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            bindings
                = <&macro_press &mo WSYM>
                , <&macro_tap &kp K_CANCEL> // Cancel keys allow for deactivation of any previously queued mod on hitting a layer key
                , <&macro_pause_for_release>
                , <&macro_release &mo WSYM>
                ;
        };
    };

    conditional_layers {
        
        compatible = "zmk,conditional-layers";
        macos_tri_layer {
            if-layers = <NAV SYM>;
            then-layer = <FUN>;
        };
        
        windows_tri_layer {
            if-layers = <WNAV WSYM>;
            then-layer = <WFUN>;
        };
    };

    keymap {
        compatible = "zmk,keymap";
  
        apple_default_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│  Q       │  W       │  E       │  R       │  T       │   │  Y       │  U       │  I       │  O       │  P       │
            &kp Q      &kp W      &kp E      &kp R      &kp T          &kp Y      &kp U      &kp I      &kp O      &kp P
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  A       │  S       │  D       │  F       │  G       │   │  H       │  J       │  K       │  L       │  ' "     │
            &kp A      &kp S      &kp D      &kp F      &kp G          &kp H      &kp J      &kp K      &kp L      &kp SQT
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  Z       │  X       │  C       │  V       │  B       │   │  N       │  M       │  , <     │  . >     │  ; :     │
            &kp Z      &kp X      &kp C      &kp V      &kp B          &kp N      &kp M      &kp COMMA  &kp DOT    &kp SEMI
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &la_nav    &shift_cw      &kp SPC    &la_sym    
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };

        windows_default_layer { // Layer keys map to swapped GUI and CONTROL in subsequent layers for easier use on Windows
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│  Q       │  W       │  E       │  R       │  T       │   │  Y       │  U       │  I       │  O       │  P       │
            &kp Q      &kp W      &kp E      &kp R      &kp T          &kp Y      &kp U      &kp I      &kp O      &kp P
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  A       │  S       │  D       │  F       │  G       │   │  H       │  J       │  K       │  L       │ ' "      │
            &kp A      &kp S      &kp D      &kp F      &kp G          &kp H      &kp J      &kp K      &kp L      &kp SQT
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  Z       │  X       │  C       │  V       │  B       │   │  N       │  M       │ , <      │ . >      │ ; :      │
            &kp Z      &kp X      &kp C      &kp V      &kp B          &kp N      &kp M      &kp COMMA  &kp DOT    &kp SEMI
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &la_wnav   &shift_cw      &kp SPC    &la_wsym
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };

        apple_navigation_and_media_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│ TAB      │ SWAPPER  │ PREV. TAB│ NEXT TAB │ VOL. UP  │   │ PG UP    │ HOME     │ UP       │ END      │ BACKSPACE│
            &kp TAB &swapper &kp LS(LC(TAB)) &kp LC(TAB) &kp C_VOL_UP  &kp PG_UP  &kp HOME   &kp UARW   &kp END    &kp BSPC
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│ CTRL     │ ALT      │ SHIFT    │ CMD      │ VOL. DOWN│   | PG DOWN  │ LEFT     │ DOWN     │ RIGHT    │ ENTER    │
            &sk LCTRL  &sk LALT   &sk LSHFT  &sk LGUI   &kp C_VOL_DN   &kp PG_DN  &kp LARW   &kp DARW   &kp RARW   &kp ENTER
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│ UNDO     │ CUT      │ COPY     │ PASTE    | PLAY     │   │ NEXT/PREV│ BACK     │ FORWARD  │ Q (Quit) │ DELETE   │
            &kp LG(Z)  &kp LG(X)  &kp LG(C)  &kp LG(V) &kp C_PLAY_PAUSE &nextprev &kp LG(LBKT) &kp LG(RBKT) &kp Q  &kp DEL
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &trans     &trans         &trans     &trans
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };

        apple_symbols_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│ ESC      │  {       │  [       │  (       │ ~        │   │ ^        │ )        │ ]        │ }        │  `       │
            &kp ESC    &kp LBRC   &kp LBKT   &kp LPAR   &kp TILDE      &kp CARET  &kp RPAR   &kp RBKT   &kp RBRC   &kp GRAVE
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│ -        │ *        │ =        │ _        │ $        │   │ #        │ CMD      │ SHIFT    │ ALT      │ CTRL     │
            &kp MINUS  &kp ASTRK  &kp EQUAL  &kp UNDER  &kp DLLR       &kp HASH   &sk RGUI   &sk RSHFT  &sk RALT   &sk RCTRL
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│ +        │ |        │  @       │  /       │  %       │   │ §        │ \        │ &        │ ?        │ !        │
            &kp PLUS   &kp PIPE   &kp AT     &kp FSLH   &kp PRCNT      &kp LA(N6) &kp BSLH   &kp AMPS   &kp QMARK  &kp EXCL
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &trans     &trans         &trans     &trans
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };

        apple_tri_layer_function_and_number_row {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│ 1        │ 2        │ 3        │ 4        │ 5        │   │ 6        │ 7        │ 8        │ 9        │ 0        │
            &kp N1     &kp N2     &kp N3     &kp N4    &kp N5          &kp N6     &kp N7     &kp N8     &kp N9     &kp N0
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│ CTRL     │ ALT      │ SHIFT    │ CMD      │ F11      │   │ F12      │ CMD      │ SHIFT    │ ALT      │ CTRL     │
            &sk LCTRL  &sk LALT   &sk LSHFT  &sk LGUI   &kp F11        &kp F12    &sk RGUI   &sk RSHFT  &sk RALT   &sk RCTRL
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│ F1       │ F2       │ F3       │ F4       │ F5       │   │ F6       │ F7       │ F8       │ F9       │ F10      │
            &kp F1     &kp F2     &kp F3     &kp F4     &kp F5         &kp F6     &kp F7     &kp F8     &kp F9     &kp F10
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &trans     &trans         &trans    &trans
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };
        
        windows_navigation_and_media_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│ TAB      │ SWAPPER  │ PREV. TAB│ NEXT TAB │ VOL. UP  │   │ PG UP    │ HOME     │ UP       │ END      │ BACKSPACE│
            &kp TAB   &wswapper  &kp LS(LC(TAB)) &kp LC(TAB) &kp C_VOL_UP &kp PG_UP &kp HOME &kp UARW   &kp END    &kp BSPC
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│ WIN      │ ALT      │ SHIFT    │ CTRL     │ VOL. DOWN│   | PG DOWN  │ LEFT     │ DOWN     │ RIGHT    │ ENTER    │
            &sk LGUI  &sk LALT   &sk LSHFT  &sk LCTRL   &kp C_VOL_DN   &kp PG_DN  &kp LARW   &kp DARW   &kp RARW   &kp ENTER
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│ UNDO     │ CUT      │ COPY     │ PASTE    | PLAY     │   │ NEXT/PREV│ BACK     │ FORWARD  │ `        │ DELETE   │
            &kp LC(Z)  &kp LC(X)  &kp LC(C)  &kp LC(V) &kp C_PLAY_PAUSE &nextprev &kp LA(LARW) &kp LA(RARW) &kp GRAVE  &kp DEL
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &trans     &trans         &trans     &trans
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };

        windows_symbols_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│ ESC      │  {       │  [       │  (       │ ~        │   │ ^        │ )        │ ]        │ }        │  `       │
            &kp ESC    &kp LBRC   &kp LBKT   &kp LPAR   &kp TILDE      &kp CARET  &kp RPAR   &kp RBKT   &kp RBRC   &kp GRAVE
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│ -        │ *        │ =        │ +        │ $        │   │ #        │ CTRL     │ SHIFT    │ ALT      │ WIN      │
            &kp MINUS  &kp ASTRK  &kp EQUAL  &kp PLUS   &kp DLLR       &kp HASH   &sk RCTRL  &sk RSHFT  &sk RALT   &sk RGUI
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│ _        │ |        │  @       │  /       │  %       │   │ §        │ \        │ &        │ ?        │ !        │
            &kp UNDER  &kp PIPE   &kp AT     &kp FSLH   &kp PRCNT      &kp LA(N6) &kp BSLH   &kp AMPS   &kp QMARK  &kp EXCL
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &trans     &trans         &trans     &trans
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };

        windows_tri_layer_function_and_number_row {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│ 1        │ 2        │ 3        │ 4        │ 5        │   │ 6        │ 7        │ 8        │ 9        │ 0        │
            &kp N1     &kp N2     &kp N3     &kp N4    &kp N5          &kp N6     &kp N7     &kp N8     &kp N9     &kp N0
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│ WIN      │ ALT      │ SHIFT    │ CTRL     │ F11      │   │ F12      │ CTRL     │ SHIFT    │ ALT      │ WIN      │
            &sk LGUI  &sk LALT   &sk LSHFT  &sk LCTRL   &kp F11        &kp F12    &sk RCTRL  &sk RSHFT  &sk RALT   &sk RGUI
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│ F1       │ F2       │ F3       │ F4       │ F5       │   │ F6       │ F7       │ F8       │ F9       │ F10      │
            &kp F1     &kp F2     &kp F3     &kp F4     &kp F5         &kp F6     &kp F7     &kp F8     &kp F9     &kp F10
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &trans     &trans         &trans    &trans
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };
    };
};