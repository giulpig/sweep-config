// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/mouse.h>

// Hyper Space - not in use
#define HYPRSPC &mt LG(LC(LS(LALT))) SPC 
#define SK_HYPER &sk LG(LC(LS(LALT)))

// Bluetooth Profile Buttons (https://zmk.dev/docs/behaviors/bluetooth#bluetooth-pairing-and-profiles)
#define BT0 BT_SEL 0 // MacBook
#define BT1 BT_SEL 1 // iPad
#define BT2 BT_SEL 2 // iPhone
#define BT3 BT_SEL 3 // Available
#define BT4 BT_SEL 4 // Available
#define BT5 BT_SEL 5 // Available

// Nav layer special command buttons
#define GO_FWRD &kp LG(RBKT) // Forward button on browser and other apps
#define GO_BACK &kp LG(LBKT) // Back button on browser and other apps
#define CO_PTAB &kp LS(LC(TAB)) // Previous Tab
#define CO_NTAB &kp LC(TAB) // Next Tab
#define CO_UNDO &kp LG(Z)
#define CO_CUT &kp LG(X)
#define CO_COPY &kp LG(C)
#define CO_PASTE &kp LG(V)

// macOS specific combinations
#define ALFRED LG(SPC) // Doubles as Spotlight for usage on iOS/iPadOS
#define WOOSHY LC(LS(SPC)) // App for mouseless operation (https://wooshy.app/)
#define SCROLLA LG(LC(LS(SPC))) // App for mouseless scrolling (https://scrolla.app/)
#define SW_WIN LG(LC(LS(LA(SPC)))) // Alfred Workflow switching to other open windows (https://scrolla.app/)

// Layer names
#define DEF 0
#define NUM 1
#define NAV 2
#define SYM 3
#define FUN 4 
#define CON 5
#define DEF2 6 // just to make DEF , and . keys avaliable on &num_word via &mo DEF2
#define MOUSE 7
#define SCROLL 8 

// Writing Symbols. Useful for writing PT-BR prose and legal stuff
#define ORD_A LA(N9) // ª
#define ORD_O LA(N0) // º
#define PARAG LA(N6) // §

// Custom &sk settings to allow for better handling of Callum Style mods
&sk {
        release-after-ms = <5000>; // Default is 1000 ms
        quick-release; // Implemented fix from PR #1586 (https://github.com/zmkfirmware/zmk/pull/1586)
    };

&caps_word {
    continue-list = <
                    UNDERSCORE MINUS
                    SQT CARET TILDE GRAVE
                    K_CANCEL
                    BACKSPACE DELETE
                >;
    /delete-property/ ignore-modifiers;
};

/ {
    combos {
        compatible = "zmk,combos";
        /* Cheatsheet of numbered keys
        ╭──────┬──────┬──────┬──────┬──────╮   ╭──────┬──────┬──────┬──────┬──────╮
        │   0  |   1  |   2  |   3  |   4  |   │   5  |   6  |   7  |   8  |   9  |
        ├──────┼──────┼──────┼──────┼──────┤   ├──────┼──────┼──────┼──────┼──────┤
        │  10  |  11  |  12  |  13  |  14  |   │  15  |  16  |  17  |  18  |  19  |
        ├──────┼──────┼──────┼──────┼──────┤   ├──────┼──────┼──────┼──────┼──────┤
        │  20  |  21  |  22  |  23  |  24  |   │  25  |  26  |  27  |  28  |  29  |
        ╰──────┴──────┴──────┼──────┼──────┤   ├──────┼──────┼──────┴──────┴──────╯
                             |  30  |  31  |   |  32  |  33  |
                             ╰──────┴──────╯   ╰──────┴──────╯ */
    

        // Layer combos
        combo_config_layer { // Hosts Bootoader and bluetooth profiles keyts in ZMK firmware
            timeout-ms = <80>;
            key-positions = <21 12 23>; // ^ shape in the botton midle of left hand
            layers = <NAV CON>; // Only available in NAV layer to allow for left-handed activation and avoid trigger while typing in DEF
            bindings = <&to CON>;
        };
        combo_numword_layer_toggle { 
            timeout-ms = <80>;
            key-positions = <16 17 18>; // J K L / 4 5 6
            layers = <DEF NUM>;
            bindings = <&num_word>;
        };
        combo_navigate { 
            timeout-ms = <80>;
            key-positions = <26 27 28>; // M , .
            layers = <DEF NAV>;
            bindings = <&tog NAV>;
        };
        combo_mouse { 
            timeout-ms = <80>;
            key-positions = <20 29>; // Z ;
            layers = <DEF MOUSE SCROLL>;
            bindings = <&tog MOUSE>;
        };
        
        // macOS features combos
        hyper_combo {
            timeout-ms = <100>;
            key-positions = <31 32>; // F J
            layers = <DEF>; // Only available in the DEF layer
            bindings = <SK_HYPER>;
        };
        combo_spotlight_alfred {
            timeout-ms = <80>;
            key-positions = <13 16>; // F J
            layers = <DEF>; // Only available in the DEF layer
            bindings = <&kp ALFRED>;
        };
        combo_wooshy {
            timeout-ms = <80>;
            key-positions = <6 7 8>; // U I O
            layers = <DEF>; // Only available in the DEF layer
            bindings = <&kp WOOSHY>;
        };
        combo_scrolla {
            timeout-ms = <80>;
            key-positions = <16 17>; // J K
            layers = <DEF>; // Only available in the DEF layer
            bindings = <&kp SCROLLA>;
        };
        combo_sw_win {
            timeout-ms = <80>;
            key-positions = <1 2 3>; // W E R
            layers = <DEF>; // Only available in the DEF layer
            bindings = <&kp SW_WIN>;
        };
        
        // ZMK features
        combo_key_repeat {
            timeout-ms = <80>;
            key-positions = <26 27>; // M ,
            layers = <DEF>; // Only available in the DEF layer
            bindings = <&key_repeat>;
        };
        
        // Acentos
        combo_tilde {
            timeout-ms = <80>;
            key-positions = <4 14>; // T G
            layers = <DEF>; // Only available in the DEF layer
            bindings = <&kp TILDE>;
        };
        combo_circ {
            timeout-ms = <80>;
            key-positions = <5 15>; // Y H
            layers = <DEF>; // Only available in the DEF layer
            bindings = <&kp CARET>;
        };
        combo_grave {
            timeout-ms = <80>;
            key-positions = <9 19>; // P '
            layers = <DEF>; // Only available in the DEF layer
            bindings = <&kp GRAVE>;
        };
    };
    
    behaviors {
        ht: hold_tap { // Currently, just the NUM row uses a hold tap key with &lt SYM N0
            label = "hold_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <400>;
            quick-tap-ms = <300>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };
        td_cw: tap_dance_caps_word {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_CAPS_WORD";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp LSHFT>, <&caps_word>;
        };
        tdqh: tap_dance_qh { // Quitting and hiding apps from Swapper in NAV
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_QUIT_HIDE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp Q>, <&kp H>;
        };      
        // Bluetooth quick switches
        tdbt0: tap_dance_bt0 {
            compatible = "zmk,behavior-tap-dance";
            label = "BLUETOOTH QUICKSWITCH BT0";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&act_bt0>, <&bt BT0>;
        };      
        tdbt1: tap_dance_bt0 { // Quitting and hiding apps from Swapper in NAV
            compatible = "zmk,behavior-tap-dance";
            label = "BLUETOOTH QUICKSWITCH BT1";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&act_bt1>, <&bt BT1>;
        };      
        tdbt2: tap_dance_bt0 { // Quitting and hiding apps from Swapper in NAV
            compatible = "zmk,behavior-tap-dance";
            label = "BLUETOOTH QUICKSWITCH BT2";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&act_bt2>, <&bt BT2>;
        };      
        swapper: swapper {// Got it from urob's repo as it's tri-state behavior is currently a PR on main ZMK
            compatible = "zmk,behavior-tri-state";
            label = "SWAPPER";
            #binding-cells = <0>;
            bindings = <&kt LCMD>, <&kp TAB>, <&kt LCMD>;
            ignored-key-positions = <7 16 17 18 27>; // Arrow keys and Q/H tap dance to quit/hide apps
        };
        num_word: behavior_num_word { // Documentation in PR# 1451 (https://github.com/zmkfirmware/zmk/pull/1451), got it from urob's repo
			compatible = "zmk,behavior-caps-word";
			label = "NUM_WORD";
			#binding-cells = <0>;
                        layers = <NUM>;                     // layer to be toggled
                        ignore-numbers;                     // numbers won't deactivate the layer, hence &num_word
			            continue-list =                     // keycodes that will not cancel &numword
                            <   BACKSPACE DELETE 
                                DOT COMMA SQT SEMI SLASH MINUS
                                K_CANCEL
                            >;       
		};
    };

    // Macros to allow for cancelling sticky behaviors with K_CANCEL taps, faking Callum's cancel behavior found on QMK macros
    macros {
        la_nav: cancel_queued_os_mods_and_toggle_nav {
            label = "LA_NAV";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            bindings
                = <&macro_press &mo NAV>
                , <&macro_tap &kp K_CANCEL>
                , <&macro_pause_for_release>
                , <&macro_release &mo NAV>
                ;
        };
        la_sym: cancel_queued_os_mods_and_toggle_sym {
            label = "LA_SYM";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            bindings
                = <&macro_press &mo SYM>
                , <&macro_tap &kp K_CANCEL>
                , <&macro_pause_for_release>
                , <&macro_release &mo SYM>
                ;
        };
        // Bluetooth switch macros
        act_bt0: change_to_bt0_and_back_to_def {
            label = "Activate BT0";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            bindings
                = <&macro_tap &bt BT0>
                , <&macro_tap &to DEF>
                ;
        };
        act_bt1: change_to_bt1_and_back_to_def {
            label = "Activate BT1";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            bindings
                = <&macro_tap &bt BT1>
                , <&macro_tap &to DEF>
                ;
        };
        act_bt2: change_to_bt2_and_back_to_def {
            label = "Activate BT2";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            bindings
                = <&macro_tap &bt BT2>
                , <&macro_tap &to DEF>
                ;
        };
    };

    conditional_layers { // They allow for more flexibility when changing layers from FUN to both NAV or SYM by just releasing the other layer key
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <NAV SYM>;
            then-layer = <FUN>;
        };
    };

    keymap { // Heavily inspired in Callum's Layout
        compatible = "zmk,keymap";
        default_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│  Q       │  W       │  E       │  R       │  T       │   │  Y       │  U       │  I       │  O       │  P       │
            &kp Q      &kp W      &kp E      &kp R      &kp T          &kp Y      &kp U      &kp I      &kp O      &kp P
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  A       │  S       │  D       │  F       │  G       │   │  H       │  J       │  K       │  L       │ ' "      │
             &kp A      &kp S      &kp D      &kp F      &kp G          &kp H     &kp J      &kp K      &kp L      &kp SQT 
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  Z       │  X       │  C       │  V       │  B       │   │  N       │  M       │ , <      │ . >      │ ; :      │
             &kp Z      &kp X      &kp C      &kp V      &kp B         &kp N      &kp M      &kp COMMA  &kp DOT    &kp SEMI
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &la_nav     &td_cw        &kp SPC    &la_sym
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };
        
        numword_layer { // Accessed through combo in DEF, positioned here to allow for access on every other layer bellow
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│          │          │          │          │          │   │ DELETE   │ 7        │ 8        │ 9        │ BACKSPACE|
            &trans     &trans     &trans     &trans     &trans         &kp DEL    &kp N7     &kp N8     &kp N9     &kp BSPC
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│          │          │          │          │          │   │ ª        │ 4        │ 5        │ 6        │  º       │
            &trans     &trans     &trans     &trans     &trans         &kp ORD_A  &kp N4     &kp N5     &kp N6     &kp ORD_O
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│          │          │          │          │          │   │ ,        │ 1        │ 2        │ 3        │ .        |
            &trans     &trans     &trans     &trans      &trans        &kp COMMA  &kp N1     &kp N2     &kp N3     &kp DOT
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &trans     &mo DEF2       &trans     &lt SYM N0
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };
        
        left_navigation_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│ TAB      │ Swapper  │ Prev. tab│ Next tab │ CAPS     │   │          │ PG DOWN  │ UP       │ PG UP    │ BACKSPACE│
            &kp TAB    &swapper   CO_PTAB    CO_NTAB    &sk CAPSLOCK   &none      &kp PG_DN  &kp UARW   &kp PG_UP  &kp BSPC
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│ CTRL     │ ALT      │ SHIFT    │ CMD      │ HYPER    │   │          │ LEFT     │ DOWN     │ RIGHT    │ ENTER    │
            &sk LCTRL  &sk LALT   &sk LSHFT  &sk LGUI   SK_HYPER       &none      &kp LARW   &kp DARW   &kp RARW   &kp ENTER
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│ UNDO     │ CUT      │ COPY     │ PASTE    |          │   │ BACK     │ FORWARD  │ Q / H    │          │ DELETE   │
            CO_UNDO    CO_CUT     CO_COPY    CO_PASTE   &none          GO_BACK    GO_FWRD    &tdqh      &none      &kp DEL
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &trans     &trans         &trans     &trans
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };

        right_symbols_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│ ESC      │  {       │  [       │  (       │ ~        │   │ ^        │ )        │ ]        │ }        │  `       │
            &kp ESC    &kp LBRC   &kp LBKT   &kp LPAR   &kp TILDE      &kp CARET  &kp RPAR   &kp RBKT   &kp RBRC   &kp GRAVE
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│ -        │ *        │ =        │ _        │ $        │   │ #        │ CMD      │ SHIFT    │ ALT      │ CTRL     │
            &kp MINUS  &kp ASTRK  &kp EQUAL  &kp UNDER  &kp DLLR       &kp HASH   &sk LGUI   &sk LSHFT  &sk LALT   &sk LCTRL
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│ +        │ |        │  @       │  /       │  %       │   │ §        │ \        │ &        │ ?        │ !        │
            &kp PLUS   &kp PIPE   &kp AT     &kp FSLH   &kp PRCNT      &kp PARAG  &kp BSLH   &kp AMPS   &kp QMARK  &kp EXCL
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &trans     &trans         &trans     &trans
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };

        function_number_row_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│ 1        │ 2        │ 3        │ 4        │ 5        │   │ 6        │ 7        │ 8        │ 9        │ 0        │
            &kp N1     &kp N2     &kp N3     &kp N4    &kp N5          &kp N6     &kp N7     &kp N8     &kp N9     &kp N0
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│ CTRL     │ ALT      │ SHIFT    │ CMD      │ F11      │   │ F12      │ CMD      │ SHIFT    │ ALT      │ CTRL     │
            &sk LCTRL  &sk LALT   &sk LSHFT  &sk LGUI   &kp F11        &kp F12    &sk LGUI   &sk LSHFT  &sk LALT   &sk LCTRL
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│ F1       │ F2       │ F3       │ F4       │ F5       │   │ F6       │ F7       │ F8       │ F9       │ F10      │
            &kp F1     &kp F2     &kp F3     &kp F4    &kp F5          &kp F6     &kp F7     &kp F8     &kp F9     &kp F10
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &trans     &trans         &trans    &trans
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };
          
        
        keyboard_config_layer { // Access from NAV with ^ claw combo
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│          │          │          │          │PROFILE 0 │   │PROFILE 3 │          │          │          │          |
            &none      &none      &none      &none      &tdbt0         &bt BT3    &none      &none      &none       &none
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│BOOTLOADER│          │          │          │PROFILE 1 │   │PROFILE 4 │          │          │          │BOOTLOADER
          &bootloader  &none      &none      &none      &tdbt1         &bt BT4    &none      &none      &none     &bootloader
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│ CLEAR BT │          │          │          │PROFILE 2 │   │PROFILE 5 │          │          │          │
           &bt BT_CLR  &none      &none      &none      &tdbt2         &bt BT5     &none      &none      &none      &none 
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &trans     &to DEF         &to DEF    &trans
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };
       
        default_layer_again { // To work around the lack of access to DEF from NUM
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│  Q       │  W       │  E       │  R       │  T       │   │  Y       │  U       │  I       │  O       │  P       │
            &kp Q      &kp W      &kp E      &kp R      &kp T          &kp Y      &kp U      &kp I      &kp O      &kp P
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  A       │  S       │  D       │  F       │  G       │   │  H       │  J       │  K       │  L       │ ' "      │
             &kp A      &kp S      &kp D      &kp F      &kp G          &kp H     &kp J      &kp K      &kp L      &kp SQT 
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  Z       │  X       │  C       │  V       │  B       │   │  N       │  M       │ , <      │ . >      │ ; :      │
             &kp Z      &kp X      &kp C      &kp V      &kp B         &kp N      &kp M      &kp COMMA  &kp DOT    &kp SEMI
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &la_nav     &td_cw        &kp SPC    &la_sym
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };

        mouse_emulation_layer { // Access from NAV with ^ claw combo
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│          │          │          │          │          │   │          │          │          │          │          |
            &none      &none      &none      &none      &none          &none      &none      &mmv MOVE_UP    &none       &none
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│          │          │          │          │          │   │          │          │          │          │          |
            &none      &none      &none      &none      &none        &none &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_RIGHT &mo SCROLL
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│          │          │          │          │          │   │          │          │          │          │          |
            &none      &none      &none      &none      &none          &none      &none      &mkp MB3        &none       &none 
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &trans     &to DEF        &mkp LCLK  &mkp RCLK
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };
        
        mouse_scroll_layer { // Access from NAV with ^ claw combo
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│          │          │          │          │          │   │          │          │          │          │          |
            &none      &none      &none      &none      &none          &none      &none      &mwh SCROLL_UP    &none       &none
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│          │          │          │          │          │   │          │          │          │          │          |
            &none      &none      &none      &none      &none          &none &mwh SCROLL_LEFT &mwh SCROLL_DOWN &mwh SCROLL_RIGHT &none
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│          │          │          │          │          │   │          │          │          │          │          |
            &none      &none      &none      &none      &none          &none      &none      &mkp MB3        &none       &none 
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &trans     &to DEF        &mkp LCLK  &mkp RCLK
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };


    };
};