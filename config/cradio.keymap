// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// Auto Shift
#define AS(keycode) &as LS(keycode) keycode // Autoshift Macro (https://zmk.dev/docs/behaviors/hold-tap#example-use-cases)

// Hyper Space
// Having trouble with accidental presses. Considering changes or even moving to the left thumb key as a mt with other much used key such as BSPC, tab or enter
#define HYPER LG(LC(LS(LALT))) // Couldn't fing a propper hyper key code so I created mine
#define HYPSPCE &mt HYPER SPC // Hyper on hold, space on tap

// Bluetooth Profile Toggles (https://zmk.dev/docs/behaviors/bluetooth#bluetooth-pairing-and-profiles)
#define BT0 BT_SEL 0 // MacBook
#define BT1 BT_SEL 1
#define BT2 BT_SEL 2
#define BT3 BT_SEL 3 // Not even in the keymap
#define BT4 BT_SEL 4 // Not even in the keymap

// Nav layer buttons
#define GOBACK LG(LBKT)
#define GOFWRD LG(RBKT)

// macOS specific combinations
#define ALFRED LG(SPC) // Doubles as Spotlight for usage on iOS/iPadOS
#define SHTCAT LC(LS(SPC)) // Great for mouseless operation (https://shortcat.app/)

// Layer names
#define DEF 0
#define SYM 1
#define NAV 2
#define NUM 3
#define CON 4
#define TRV 5

// Custom &sk settings to allow for better handling of Callum Style mods
&sk {
        release-after-ms = <2000>; // Default is 1000 ms
        quick-release; // Activate on first key down to avoid double shot on the mod as SUch
    };

// Customized tap flavor to demote accidental activations o hyper + letter when typing fast    
&mt {
        tapping-term-ms = <250>; // 300 seems to work fine, wil try to reduce to 250 in next iteration
        flavor = "tap-preferred"; // this falvor does seem to be the most important setting in trying to avoid accidental activations of hyper
    };

/ {
    /* Cheatsheet of numbered key in the Ferris to assit in setting up combos (https://zmk.dev/docs/features/combos)
        ╭──────┬──────┬──────┬──────┬──────╮   ╭──────┬──────┬──────┬──────┬──────╮
        │   0  |   1  |   2  |   3  |   4  |   │   5  |   6  |   7  |   8  |   9  |
        ├──────┼──────┼──────┼──────┼──────┤   ├──────┼──────┼──────┼──────┼──────┤
        │  10  |  11  |  12  |  13  |  14  |   │  15  |  16  |  17  |  18  |  19  |
        ├──────┼──────┼──────┼──────┼──────┤   ├──────┼──────┼──────┼──────┼──────┤
        │  20  |  21  |  22  |  23  |  24  |   │  25  |  26  |  27  |  28  |  29  |
        ╰──────┴──────┴──────┼──────┼──────┤   ├──────┼──────┼──────┴──────┴──────╯
                             |  30  |  31  |   |  32  |  33  |
                             ╰──────┴──────╯   ╰──────┴──────╯ */
    combos {
        compatible = "zmk,combos";
        
        combo_config_layer { // Hosts Bootoader, reset and bluetooth profiles in ZMK
            timeout-ms = <50>;
            key-positions = <24 25>; // F5 F6
            layers = <NUM>; // Only available in the NUM layer to avoid accidental activation
            bindings = <&tog CON>;
        };
        combo_travel_layer { 
            // Got the idea from this PR (https://github.com/zmkfirmware/zmk/issues/405#issuecomment-748955060)
            // Seems like a good workaround the lack of a reliable sleep button or a simple power switch
            timeout-ms = <100>; // Increased timeout to make it easier to toggle on and off
            key-positions = <11 24 25 18>; // S V M L keys, will work in any layer (limitting to NUM layer caused it work)
            bindings = <&tog TRV>;
        };
        combo_alfred_spotlight {
            timeout-ms = <50>;
            key-positions = <13 16>; // F J
            layers = <DEF>; // Only available in the DEF layer
            bindings = <&kp ALFRED>;
        };
        combo_shortcat {
            timeout-ms = <50>;
            key-positions = <12 17>; // D K
            layers = <DEF>; // Only available in the DEF layer
            bindings = <&kp SHTCAT>;
        };
        
    };

    behaviors {

        as: auto_shift { // Still love it, even with its defects
            compatible = "zmk,behavior-hold-tap";
            label = "AUTO_SHIFT";
            #binding-cells = <2>;
            tapping_term_ms = <220>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        
    };

    conditional_layers { // Works better than &mo and &tog for it allow to faster relase of one of the &mo keys to quick grab a key on the held layer
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    keymap {
        
        // First 4 layers are pretty much a port of my QMK config heavily inspired in Callum's layout with one shot mods
        
        compatible = "zmk,keymap";
        default_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│  Q       │  W       │  E       │  R       │  T       │   │  Y       │  U       │  I       │  O       │  P       │
            AS(Q)       AS(W)      AS(E)      AS(R)      AS(T)          AS(Y)      AS(U)      AS(I)      AS(O)      AS(P)
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  A       │  S       │  D       │  F       │  G       │   │  H       │  J       │  K       │  L       │ ' "      │
            AS(A)      AS(S)      AS(D)      AS(F)      AS(G)          AS(H)      AS(J)      AS(K)      AS(L)      AS(SQT)
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  Z       │  X       │  C       │  V       │  B       │   │  N       │  M       │ , <      │ . >      │ ; :      │
            AS(Z)      AS(X)      AS(C)      AS(V)      AS(B)          AS(N)      AS(M)      &kp COMMA  &kp DOT    AS(SEMI)
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                            &mo 2       &kp LSHFT       HYPSPCE    &mo 1
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };

        sym_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│ ESC      │  {       │  [       │  (       │ ~        │   │ ^        │ )        │ ]        │ }        │  `       │
            &kp ESC    &kp LBRC   &kp LBKT   &kp LPAR   &kp TILDE      &kp CARET  &kp RPAR   &kp RBKT   &kp RBRC   &kp GRAVE
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│ -        │ *        │ =        │ _        │ $        │   │ #        │ CMD      │ SHIFT    │ ALT      │ CTRL     │
            &kp MINUS  &kp ASTRK  &kp EQUAL  &kp UNDER  &kp DLLR       &kp HASH   &sk LGUI   &sk LSHFT  &sk LALT   &sk LCTRL
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│ +        │ |        │  @       │  /       │  %       │   │ §        │ \        │ &        │ ?        │ !        │
            &kp PLUS   &kp PIPE   &kp AT     &kp FSLH   &kp PRCNT      &kp LA(N6) &kp BSLH   &kp AMPS   &kp QMARK  &kp EXCL
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &trans     &kp ESC        &trans     &trans
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };

        nav_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│ ESC      │  TAB     │          │          │          │   │          │ PG DOWN  │ UP       │ PG UP    │ BACKSPACE│
            &kp ESC     &kp TAB   &none      &none       &none         &none      &kp PG_DN  &kp UARW   &kp PG_UP  &kp BSPC
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│ CTRL     │ ALT      │ SHIFT    │ CMD      │ CAPS LOCK│   │ CAPS WORD│ LEFT     │ DOWN     │ RIGHT    │ ENTER    │
            &sk LCTRL  &sk LALT   &sk LSHFT  &sk LGUI   &kp CAPS      &caps_word  &kp LARW   &kp DARW   &kp RARW   &kp ENTER
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│ UNDO     │ CUT      │ COPY     │ PASTE    │ Shortcat │   │ BACK     │ FORWARD  │ Q (quit) │          │ DELETE   │
            &kp LG(Z)  &kp LG(X)  &kp LG(C)  &kp LG(V)  &kp SHTCAT     &kp GOBACK &kp GOFWRD  &kp Q     &none      &kp DEL
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &trans     &trans         &trans     &trans
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };

        num_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│ 1        │ 2        │ 3        │ 4        │ 5        │   │ 6        │ 7        │ 8        │ 9        │ 0        │
            &kp N1     &kp N2     &kp N3     &kp N4    &kp N5          &kp N6     &kp N7     &kp N8     &kp N9     &kp N0
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│ CTRL     │ ALT      │ SHIFT    │ CMD      │ F11      │   │ F12      │ CMD      │ SHIFT    │ ALT      │ CTRL     │
            &sk LCTRL  &sk LALT   &sk LSHFT  &sk LGUI   &kp F11        &kp F12    &sk LGUI   &sk LSHFT  &sk LALT   &sk LCTRL
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│ F1       │ F2       │ F3       │ F4       │ F5       │   │ F6       │ F7       │ F8       │ F9       │ F10      │
            &kp F1     &kp F2     &kp F3     &kp F4    &kp F5          &kp F6     &kp F7     &kp F8     &kp F9     &kp F10
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &trans     &trans         &trans     &trans
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };
        
        // Layer with ZMK interface for pairing, reseting and entering bootloader mode, will trigger through combo avaliable only in NUM layer

        keyboard_config_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│ RESET    │          │          │          │PROFILE 0 │   │          │          │          │          │  RESET   │
            &reset     &none      &none      &none      &bt BT0        &none      &none      &none      &none       &reset
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│BOOTLOADER│          │          │          │PROFILE 1 │   │          │          │          │          │BOOTLOADER│
          &bootloader  &none      &none      &none      &bt BT1        &none      &none      &none      &none     &bootloader
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│          │          │          │ CLEAR BT │PROFILE 2 │   │          │          │          │          │          │
            &none      &none      &none     &bt BT_CLR  &bt BT2        &none      &none      &none      &none      &none 
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &none      &to DEF        &to DEF    &none 
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };
        
        // An empty layer activated/deactivated via a &tog combo for tossing the keyboard in a bag with less risk of accidental key activation
        
        travel_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│          │          │          │          │          │   │          │          │          │          │          │
            &none       &none     &none      &none     &none           &none      &none      &none      &none      &none
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│          │          │          │          │          │   │          │          │          │          │          │
            &none       &none     &none      &none     &none           &none      &none      &none      &none      &none
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│          │          │          │          │          │   │          │          │          │          │          │
            &none       &none     &none      &none     &none           &none      &none      &none      &none      &none
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &none      &none          &none      &none
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };
    };
};
