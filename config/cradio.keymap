// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
 
#define HYPER LG(LC(LS(LALT))) // Couldn't fing a propper hyper key code so I created mine

// Home Row mods in CASG layout and HYPER
#define HRML(k1,k2,k3,k4,k5) &ht LCTRL k1  &ht LALT k2  &ht LSHFT k3  &ht LGUI k4  &ht HYPER k5
#define HRMR(k1,k2,k3,k4,k5) &ht HYPER k1  &ht RGUI k2  &ht RSHFT k3  &ht RALT k4  &ht RCTRL k5

// Hyper Space
#define HYPSPCE &mt HYPER SPC // Hyper on hold, space on tap
#define ENTSHFT &mt LSHFT ENTER // Shift on hold, enter on tap

// Bluetooth Profile Buttons (https://zmk.dev/docs/behaviors/bluetooth#bluetooth-pairing-and-profiles)
#define BT0 BT_SEL 0 // MacBook
#define BT1 BT_SEL 1 // iPad
#define BT2 BT_SEL 2 // iPhone (always need to dettach from iPhone though)
#define BT3 BT_SEL 3 // Available
#define BT4 BT_SEL 4 // Available
#define BT5 BT_SEL 5 // Available

// Nav layer special buttons
#define GOFWRD LG(RBKT)
#define GOBACK LG(LBKT)
#define RC_MAC LG(LC(LA(LS(N1))))   // Keyboard Maestro's Record Quick Macro 1
#define PL_MAC LC(LS(N1))           // Keyboard Maestro's Play Quick Macro 1

// macOS specific combinations
#define ALFRED LG(SPC) // Doubles as Spotlight for usage on iOS/iPadOS
#define SHTCAT LC(LS(SPC)) // Great for mouseless operation (https://shortcat.app/)

// Layer names
#define DEF 0
#define SYM 1
#define NAV 2
#define NUM 3 
#define CON 4
#define TRV 5

// Custom &sk settings to allow for better handling of Callum Style mods
&sk { // Sticky keys are the closest to Callum's One Shot mods
        release-after-ms = <2000>; // Default is 1000 ms
        quick-release; // Activate on first key down to avoid double shot on the mod as SUch
    };

// Chose tap-preferred flavor to demote accidental activations o hyper + letter when typing fast    
&mt {
        tapping-term-ms = <250>; // 300 seems to work fine, wil try to reduce to 250 in next iteration
        flavor = "tap-preferred";
    };

/ {
    /* Cheatsheet of numbered key in the Ferris to assit in creating/reading combos
        ╭──────┬──────┬──────┬──────┬──────╮   ╭──────┬──────┬──────┬──────┬──────╮
        │   0  |   1  |   2  |   3  |   4  |   │   5  |   6  |   7  |   8  |   9  |
        ├──────┼──────┼──────┼──────┼──────┤   ├──────┼──────┼──────┼──────┼──────┤
        │  10  |  11  |  12  |  13  |  14  |   │  15  |  16  |  17  |  18  |  19  |
        ├──────┼──────┼──────┼──────┼──────┤   ├──────┼──────┼──────┼──────┼──────┤
        │  20  |  21  |  22  |  23  |  24  |   │  25  |  26  |  27  |  28  |  29  |
        ╰──────┴──────┴──────┼──────┼──────┤   ├──────┼──────┼──────┴──────┴──────╯
                             |  30  |  31  |   |  32  |  33  |
                             ╰──────┴──────╯   ╰──────┴──────╯ */
    combos {
        compatible = "zmk,combos";

        combo_config_layer { // Hosts Bootoader and bluetooth profiles keyts in ZMK firmware
            timeout-ms = <100>;
            key-positions = <21 12 23>; // ^ shape in the botton midle of left hand
            layers = <NAV>; // Only available in NAV layer to allow for left-handed activation and avoid trigger while typing in DEF
            bindings = <&tog CON>;
        };
        combo_travel_layer { 
            // Got the idea from this PR (https://github.com/zmkfirmware/zmk/issues/405#issuecomment-748955060)
            // Seems like a good workaround for the lack of a reliable sleep button or a simple power switch
            timeout-ms = <100>; // Increased timeout to make it easier to toggle on and off
            key-positions = <11 24 25 18>; // S V M L keys, will work in any layer
            bindings = <&tog TRV>;
        };
        combo_alfred_spotlight {
            timeout-ms = <50>;
            key-positions = <13 16>; // F J
            layers = <DEF>; // Only available in the DEF layer
            bindings = <&kp ALFRED>;
        };
        combo_shortcat {
            timeout-ms = <50>;
            key-positions = <12 17>; // D K
            layers = <DEF>; // Only available in the DEF layer
            bindings = <&kp SHTCAT>;
        };
        
    };


     behaviors {

        // Custom ht settings to allow for better home row mods activation
        ht: hold_tap {
            label = "hold_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };

    };
 
    conditional_layers { // Works better than &mo and &tog for it allow to faster relase of one of the &mo keys to quick grab a key on the held layer
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    keymap {
        
        // First 4 layers are pretty much a port of my QMK config, which is heavily inspired in Callum's layout
        
        compatible = "zmk,keymap";
        default_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│  Q       │  W       │  E       │  R       │  T       │   │  Y       │  U       │  I       │  O       │  P       │
             &kp Q      &kp W      &kp E      &kp R      &kp T          &kp Y      &kp U      &kp I      &kp O      &kp P
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  A       │  S       │  D       │  F       │  G       │   │  H       │  J       │  K       │  L       │ ' "      │
            HRML(A,        S,         D,         F,      G)             HRMR(H,    J,         K,         L,        SQT)
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  Z       │  X       │  C       │  V       │  B       │   │  N       │  M       │ , <      │ . >      │ / ?      │
            &kp Z      &kp X      &kp C      &kp V      &kp B          &kp N      &kp M      &kp COMMA  &kp DOT    &kp FSLH
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                            &lt 2 TAB   ENTSHFT         HYPSPCE  &lt 1 BSPC
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };
        
        right_layer { // Home row modifiers only on the left hand to allow for holding arrow keys without triggering any modifiers
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│ INSERT   │  1       │  2       │  3       │          │   │          │          │ UP       │          │  :       │
            &kp INS    &kp N1     &kp N2     &kp N3     &trans         &trans     &trans     &kp UARW   &trans     &kp COLON
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│ DELETE   │  4       │  5       │  6       │          │   │          │ LEFT     │ DOWN     │ RIGHT    │  ;       │
            HRML(DEL,   N4,        N5,        N6,       G)             &trans     &kp LARW   &kp DARW   &kp LARW   &kp SEMI 
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│ CAPS     │  7       │  8       │  9       │  0       │   │          │          │          │          │          │
           &caps_word  &kp N7     &kp N8     &kp N9     &kp N0         &trans     &trans     &trans     &trans     &trans
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &trans     &kp ESC        &trans     &trans
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };

        left_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│          │  [       │  {       │  }       │          │   │  ^       │  (       │  )       │  ]       │  ~       │
            &trans     &kp LBKT   &kp LBRC   &kp RBRC   &trans         &kp CARET  &kp LPAR   &kp RPAR   &kp RBKT   &kp TILDE
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  !       │  @       │  #       │  $       │  %       │   │  *       │  -       │  =       │  \       │  `       │
            HRML(EXCL,  AT,        HASH,      DLLR,      PRCNT)       HRMR(ASTRK,  MINUS,     EQUAL,     BSLH,     GRAVE)
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│          │          │          │          │          │   │  &       │  _       │  +       │  │       │          │
            &trans     &trans     &trans     &trans     &trans         &kp AMPS   &kp UNDER  &kp PLUS   &kp PIPE   &trans
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &trans     &trans         &trans     &trans
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };
        fun_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│ 1        │ 2        │ 3        │ 4        │ 5        │   │ 6        │ 7        │ 8        │ 9        │ 0        │
            &kp N1     &kp N2     &kp N3     &kp N4    &kp N5          &kp N6     &kp N7     &kp N8     &kp N9     &kp N0
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│ CTRL     │ ALT      │ SHIFT    │ CMD      │ F11      │   │ F12      │ CMD      │ SHIFT    │ ALT      │ CTRL     │
            &sk LCTRL  &sk LALT   &sk LSHFT  &sk LGUI   &kp F11        &kp F12    &sk LGUI   &sk LSHFT  &sk LALT   &sk LCTRL
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│ F1       │ F2       │ F3       │ F4       │ F5       │   │ F6       │ F7       │ F8       │ F9       │ F10      │
            &kp F1     &kp F2     &kp F3     &kp F4    &kp F5          &kp F6     &kp F7     &kp F8     &kp F9     &kp F10
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &trans     &trans         &trans     &trans
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };
        
        // CON Layer with ZMK interface for pairing, reseting and entering bootloader mode, will trigger through combo avaliable only in NUM layer
        keyboard_config_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│          │          │          │          │PROFILE 0 │   │PROFILE 3 │          │          │          │
            &none      &none      &none      &none      &bt BT0        &bt BT3    &none      &none      &none       &none
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│BOOTLOADER│          │          │          │PROFILE 1 │   │PROFILE 4 │          │          │          │BOOTLOADER
          &bootloader  &none      &none      &none      &bt BT1        &bt BT4    &none      &none      &none     &bootloader
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│ CLEAR BT │          │          │          │PROFILE 2 │   │PROFILE 5 │          │          │          │
           &bt BT_CLR  &none      &none      &none     &bt BT2        &bt BT5     &none      &none      &none      &none 
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &none      &to DEF        &to DEF    &none 
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };
        
        // TRV is an empty layer with a weird &tog combo activation for tossing the keyboard in a bag
        travel_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│          │          │          │          │          │   │          │          │          │          │          │
            &none       &none     &none      &none     &none           &none      &none      &none      &none      &none
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│          │          │          │          │          │   │          │          │          │          │          │
            &none       &none     &none      &none     &none           &none      &none      &none      &none      &none
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│          │          │          │          │          │   │          │          │          │          │          │
            &none       &none     &none      &none     &none           &none      &none      &none      &none      &none
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &none      &none          &none      &none
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };
    };
};
