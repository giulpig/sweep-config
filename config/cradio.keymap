// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// Nav layer special command buttons
#define GO_FWRD &kp LG(RBKT) // Forward button on browser and other apps
#define GO_BACK &kp LG(LBKT) // Back button on browser and other apps
#define CO_PTAB &kp LS(LC(TAB)) // Previous Tab
#define CO_NTAB &kp LC(TAB) // Next Tab
#define SK_HYPER &sk LG(LC(LS(LALT))) // Sticky Hyper

// Media keys used on NAV
#define ME_VOLD &kp C_VOL_DN
#define ME_VOLU &kp C_VOL_UP
// #define ME_MUTE &kp C_MUTE
#define ME_PREV &kp C_PREV
#define ME_PLAY &kp C_PP
#define ME_NEXT &kp C_NEXT 
#define ME_BRID &kp C_BRI_DN
#define ME_BRIU &kp C_BRI_UP

// macOS specific combinations
#define ALFRED LG(SPC) // Doubles as Spotlight for usage on iOS/iPadOS
#define SHTCAT LC(LS(SPC)) // App for mouseless operation
#define SCROLLA LG(LC(LS(SPC))) // App for mouseless scrolling (https://scrolla.app/)

// Aditional Writing Symbols
#define ORD_A LA(N9) // ª
#define ORD_O LA(N0) // º
#define PARAG LA(N6) // §

// Layer names
#define DEF 0
#define NUM 1
#define NAV 2
#define SYM 3
#define FUN 4 
// #define CON 5

// Custom &sk settings to allow for better handling of Callum Style mods
&sk {
        release-after-ms = <5000>; // Default is 1000 ms
        quick-release; // Implemented fix from PR #1586 (https://github.com/zmkfirmware/zmk/pull/1586)
    };

&caps_word {
    continue-list = <
                    UNDERSCORE MINUS
                    SQT CARET TILDE GRAVE
                    K_CANCEL
                    BACKSPACE DELETE
                >;
    /delete-property/ ignore-modifiers;
};

/ {
    combos {
        compatible = "zmk,combos";
        /* Cheatsheet of numbered keys
        ╭──────┬──────┬──────┬──────┬──────╮   ╭──────┬──────┬──────┬──────┬──────╮
        │   0  |   1  |   2  |   3  |   4  |   │   5  |   6  |   7  |   8  |   9  |
        ├──────┼──────┼──────┼──────┼──────┤   ├──────┼──────┼──────┼──────┼──────┤
        │  10  |  11  |  12  |  13  |  14  |   │  15  |  16  |  17  |  18  |  19  |
        ├──────┼──────┼──────┼──────┼──────┤   ├──────┼──────┼──────┼──────┼──────┤
        │  20  |  21  |  22  |  23  |  24  |   │  25  |  26  |  27  |  28  |  29  |
        ╰──────┴──────┴──────┼──────┼──────┤   ├──────┼──────┼──────┴──────┴──────╯
                             |  30  |  31  |   |  32  |  33  |
                             ╰──────┴──────╯   ╰──────┴──────╯ */
    
        // Layer combos
        // combo_config_layer { // Hosts Bootoader and bluetooth profiles keyts in ZMK firmware
        //     timeout-ms = <80>;
        //     key-positions = <21 12 23>; // ^ shape in the botton midle of left hand
        //     layers = <NAV CON>; // Only available in NAV layer to allow for left-handed activation and avoid trigger while typing in DEF
        //     bindings = <&to CON>;
        // };
        combo_numword_layer_toggle { 
            timeout-ms = <80>;
            key-positions = <16 17 18>; // J K L / 4 5 6
            layers = <DEF NUM>;
            bindings = <&num_word>;
        };
        combo_navigate { 
            timeout-ms = <80>;
            key-positions = <11 12 13>; // S D F
            layers = <DEF NAV>;
            bindings = <&tog NAV>;
        };

        // macOS features combos
        combo_spotlight_alfred {
            timeout-ms = <80>;
            key-positions = <13 16>; // F J
            layers = <DEF>; // Only available in the DEF layer
            bindings = <&kp ALFRED>;
        };
        combo_shortcat {
            timeout-ms = <80>;
            key-positions = <6 7 8>; // U I O
            layers = <DEF>; // Only available in the DEF layer
            bindings = <&kp SHTCAT>;
        };
        combo_scrolla {
            timeout-ms = <80>;
            key-positions = <16 17>; // J K
            layers = <DEF>; // Only available in the DEF layer
            bindings = <&kp SCROLLA>;
        };
        
        // ZMK features
        combo_key_repeat {
            timeout-ms = <80>;
            key-positions = <26 27>; // M ,
            layers = <DEF>; // Only available in the DEF layer
            bindings = <&key_repeat>;
        };

        // Bluetooth toggles
        combo_bt0 {
            timeout-ms = <80>;
            key-positions = <2 3>;
            layers = <FUN>; 
            bindings = <&act_bt0>;
        };
        combo_toggle_bt1_connection {
            timeout-ms = <80>;
            key-positions = <12 13>;
            layers = <FUN>; 
            bindings = <&act_bt1>;
        };
        combo_toggle_bt2_connection {
            timeout-ms = <80>;
            key-positions = <22 23>;
            layers = <FUN>; 
            bindings = <&act_bt2>;
        };
        combo_toggle_bt3_connection {
            timeout-ms = <80>;
            key-positions = <6 7>;
            layers = <FUN>; 
            bindings = <&act_bt3>;
        };
        combo_toggle_bt4_connection {
            timeout-ms = <80>;
            key-positions = <16 17>;
            layers = <FUN>; 
            bindings = <&act_bt4>;
        };
        combo_toggle_bt5_connection {
            timeout-ms = <80>;
            key-positions = <26 27>;
            layers = <FUN>; 
            bindings = <&act_bt5>;
        };
        // Bluetooth Profile Config
        combo_bootloader_on_the_left_side {
            timeout-ms = <80>;
            key-positions = <10 11>;
            layers = <FUN>; 
            bindings = <&bootloader>;
        };
        combo_bootloader_on_the_right_side {
            timeout-ms = <80>;
            key-positions = <18 19>;
            layers = <FUN>; 
            bindings = <&bootloader>;
        };
        combo_clear_current_bluetooth_profile {
            timeout-ms = <80>;
            key-positions = <20 21>;
            layers = <FUN>; 
            bindings = <&bootloader>;
        };
        
    };
    
    behaviors {
        ht: hold_tap { // Currently, just the NUM row uses a hold tap key with &lt SYM N0 on right inner thumb. Reconsidering it, though
            label = "hold_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <400>; // Terms hugely favor 
            quick-tap-ms = <300>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };
        td_cw: tap_dance_caps_word {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_CAPS_WORD";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp LSHFT>, <&caps_word>;
        };
        
        swapper: swapper { // Swapper // Got it from urob's repo as it's tri-state behavior is currently a PR for main ZMK
            compatible = "zmk,behavior-tri-state";
            label = "SWAPPER";
            #binding-cells = <0>;
            bindings = <&kt LCMD>, <&kp TAB>, <&kt LCMD>;
            ignored-key-positions = <7 9 16 17 18 29>; // Arrow keys and DEL/BSPC to quit/hide apps from altTabfs
        };
        num_word: behavior_num_word { // Documentation in PR# 1451 (https://github.com/zmkfirmware/zmk/pull/1451), got it from urob's repo
			compatible = "zmk,behavior-caps-word";
			label = "NUM_WORD_KEY";
			#binding-cells = <0>;
                        layers = <NUM>;                     // layer to be toggled
                        ignore-numbers;                     // numbers won't deactivate the layer, hence &num_word
			            continue-list =                     // other keycodes that will not cancel &numword
                            <   BACKSPACE DELETE 
                                DOT COMMA SQT SEMI SLASH MINUS
                            >;       
		};
    };
    
    macros {
        // Macros to allow for cancelling sticky behaviors with K_CANCEL taps, emulating Callum's cancel behavior found on QMK macros
        la_nav: cancel_queued_os_mods_and_toggle_nav {
            label = "LA_NAV";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            bindings
                = <&macro_press &mo NAV>
                , <&macro_tap &kp K_CANCEL>
                , <&macro_pause_for_release>
                , <&macro_release &mo NAV>
                ;
        };
        la_sym: cancel_queued_os_mods_and_toggle_sym {
            label = "LA_SYM";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            bindings
                = <&macro_press &mo SYM>
                , <&macro_tap &kp K_CANCEL>
                , <&macro_pause_for_release>
                , <&macro_release &mo SYM>
                ;
        };
        
        // Macros for quick bluetooth switching
        act_bt0: change_to_bt0_and_back_to_def { // MacBook Air
            label = "Activate BT0 device";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <200>;
            bindings
                = <&macro_tap &bt BT_SEL 0>
                , <&macro_tap &to DEF>
                ;
        };
        act_bt1: change_to_bt1_and_back_to_def { // iPad
            label = "Activate BT1 device";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <200>;
            bindings
                = <&macro_tap &bt BT_SEL 1>
                , <&macro_tap &to DEF>
                ;
        };
        act_bt2: change_to_bt2_and_back_to_def { // iPhone
            label = "Activate BT2 device";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <200>;
            bindings
                = <&macro_tap &bt BT_SEL 2>
                , <&macro_tap &to DEF>
                ;
        };
        act_bt3: change_to_bt3_and_back_to_def { // PiPoca
            label = "Activate BT3 device";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <200>;
            bindings
                = <&macro_tap &bt BT_SEL 3>
                , <&macro_tap &to DEF>
                ;
        };
        act_bt4: change_to_bt4_and_back_to_def { // Empty
            label = "Activate BT4 device";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <200>;
            bindings
                = <&macro_tap &bt BT_SEL 4>
                , <&macro_tap &to DEF>
                ;
        };
        act_bt5: change_to_bt5_and_back_to_def { // Empty
            label = "Activate BT5 device";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <200>;
            bindings
                = <&macro_tap &bt BT_SEL 5>
                , <&macro_tap &to DEF>
                ;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <NAV SYM>;
            then-layer = <FUN>;
        };
    };

    keymap {
        compatible = "zmk,keymap";
        default_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│  Q       │  W       │  E       │  R       │  T       │   │  Y       │  U       │  I       │  O       │  P       │
            &kp Q      &kp W      &kp E      &kp R      &kp T          &kp Y      &kp U      &kp I      &kp O      &kp P
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  A       │  S       │  D       │  F       │  G       │   │  H       │  J       │  K       │  L       │ ' "      │
             &kp A      &kp S      &kp D      &kp F      &kp G          &kp H     &kp J      &kp K      &kp L      &kp SQT 
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  Z       │  X       │  C       │  V       │  B       │   │  N       │  M       │ , <      │ . >      │ ; :      │
             &kp Z      &kp X      &kp C      &kp V      &kp B         &kp N      &kp M      &kp COMMA  &kp DOT    &kp SEMI
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &la_nav     &td_cw        &kp SPC    &la_sym
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };
        
        numword_layer { // Accessed through combo in DEF, positioned here to allow for access on every other layer bellow
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│          │          │          │          │          │   │ DELETE   │ 7        │ 8        │ 9        │ BACKSPACE|
            &trans     &trans     &trans     &trans     &trans         &kp DEL    &kp N7     &kp N8     &kp N9     &kp BSPC
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│          │          │          │          │          │   │ ª        │ 4        │ 5        │ 6        │  º       │
            &trans     &trans     &trans     &trans     &trans         &kp ORD_A  &kp N4     &kp N5     &kp N6     &kp ORD_O
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│          │          │          │          │          │   │ ,        │ 1        │ 2        │ 3        │ .        |
            &trans     &trans     &trans     &kp FSLH   &kp PRCNT      &kp COMMA  &kp N1     &kp N2     &kp N3     &kp DOT
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &trans     &trans         &trans     &lt SYM N0
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };
        
        left_navigation_layer { // Experimenting with the removal
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│ TAB      │ SWAPPER  │ PREV. TAB│ NEXT TAB │ CAPS LOCK│   │ PG UP    │ PG DOWN  │ UP       │ PG UP    │ BACKSPACE│
            &kp TAB    &swapper   CO_PTAB    CO_NTAB    &kp CAPS        &kp PG_UP  &kp HOME   &kp UARW   &kp END    &kp BSPC
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│ CTRL     │ ALT      │ SHIFT    │ CMD      │ HYPER    │   │ PG DOWN  │ LEFT     │ DOWN     │ RIGHT    │ ENTER    │
            &sk LCTRL  &sk LALT   &sk LSHFT  &sk LGUI   SK_HYPER       &kp PG_DN  &kp LARW   &kp DARW   &kp RARW   &kp ENTER
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│ BRIGHT UP│BRIGHT DWN│ BACK     │ FORWARD  | VOL. DOWN│   │ MUTE     │ PREVIOUS │PLAY/PAUSE│ NEXT     │ DELETE   │
            ME_BRID    ME_BRIU    GO_BACK    GO_FWRD    ME_VOLD        ME_VOLU    ME_PREV    ME_PLAY    ME_NEXT    &kp DEL
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &trans     &trans         &trans     &trans
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };

        right_symbols_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│ ESC      │  {       │  [       │  (       │ ~        │   │ ^        │ )        │ ]        │ }        │  `       │
            &kp ESC    &kp LBRC   &kp LBKT   &kp LPAR   &kp TILDE      &kp CARET  &kp RPAR   &kp RBKT   &kp RBRC   &kp GRAVE
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│ -        │ *        │ =        │ _        │ $        │   │ #        │ CMD      │ SHIFT    │ ALT      │ CTRL     │
            &kp MINUS  &kp ASTRK  &kp EQUAL  &kp UNDER  &kp DLLR       &kp HASH   &sk LGUI   &sk LSHFT  &sk LALT   &sk LCTRL
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│ +        │ |        │  @       │  /       │  %       │   │ §        │ \        │ &        │ ?        │ !        │
            &kp PLUS   &kp PIPE   &kp AT     &kp FSLH   &kp PRCNT      &kp PARAG  &kp BSLH   &kp AMPS   &kp QMARK  &kp EXCL
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &trans     &trans         &trans     &trans
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };

        function_number_row_layer { // Experimenting the full removal of FN keys from NUM
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│ 1        │ 2        │ 3        │ 4        │ 5        │   │ 6        │ 7        │ 8        │ 9        │ 0        │
            &kp N1     &kp N2     &kp N3     &kp N4    &kp N5          &kp N6     &kp N7     &kp N8     &kp N9     &kp N0
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│ CTRL     │ ALT      │ SHIFT    │ CMD      │ Vol down │   │ Vol up   │ CMD      │ SHIFT    │ ALT      │ CTRL     │
            &sk LCTRL  &sk LALT   &sk LSHFT  &sk LGUI  &kp C_VOL_DN  &kp C_VOL_UP &sk LGUI   &sk LSHFT  &sk LALT   &sk LCTRL
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│ F1       │ F2       │ F3       │ F4       │ F5       │   │ F6       │ F7       │ F8       │ F9       │ F10      │
            &kp F1     &kp F2     &kp F3     &kp F4     &kp F5         &kp F6     &kp F7     &kp F8     &kp F9     &kp F10
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &trans     &trans         &trans    &trans
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };
        
        // keyboard_config_layer { // Access from NAV with ^ claw combo
        //     bindings = <
        // //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        // //│          │          │          │          │PROFILE 0 │   │PROFILE 3 │          │          │          │          |
        //     &none      &none      &none      &none      &act_bt0       &act_bt3   &none      &none      &none       &none
        // //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        // //│BOOTLOADER│          │          │          │PROFILE 1 │   │PROFILE 4 │          │          │          │BOOTLOADER
        //   &bootloader  &none      &none      &none      &act_bt1       &act_bt4   &none      &none      &none     &bootloader
        // //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        // //│ CLEAR BT │          │          │          │PROFILE 2 │   │PROFILE 5 │          │          │          │
        //    &bt BT_CLR  &none      &none      &none      &act_bt2       &act_bt5   &none      &none      &none      &none 
        // //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
        //                                      &trans     &to DEF         &to DEF    &trans
        // //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
        //     >;
        // };

    };
};