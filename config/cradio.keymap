// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// Hyper Space 
#define HYPER LG(LC(LS(LALT))) // Couldn't fing a propper hyper key code so I created mine
#define HYPSPCE &mt HYPER SPC // Hyper on hold, space on tap

// Home Row mods in CASG layout and HYPER
#define HRML(k1,k2,k3,k4,k5) &ht LCTRL k1  &ht LALT k2  &ht LSHFT k3  &ht LGUI k4  &ht HYPER k5
#define HRMR(k1,k2,k3,k4,k5) &ht HYPER k1  &ht RGUI k2  &ht RSHFT k3  &ht RALT k4  &ht RCTRL k5

// Bluetooth Profile Buttons (https://zmk.dev/docs/behaviors/bluetooth#bluetooth-pairing-and-profiles)
#define BT0 BT_SEL 0 // MacBook
#define BT1 BT_SEL 1 // iPad
#define BT2 BT_SEL 2 // iPhone (always need to dettach from iPhone though)
#define BT3 BT_SEL 3 // Available
#define BT4 BT_SEL 4 // Available
#define BT5 BT_SEL 5 // Available

// Nav layer special command buttons
#define GO_FWRD &kp LG(RBKT)
#define GO_BACK &kp LG(LBKT)
#define CO_PTAB &kp LS(LC(TAB)) // Previous Tab
#define CO_NTAB &kp LC(TAB) // Next Tab

// macOS specific combinations
#define ALFRED LG(SPC) // Doubles as Spotlight for usage on iOS/iPadOS
#define SHTCAT LC(LS(SPC)) // Great for mouseless operation (https://shortcat.app/)

// Layer names
#define DEF 0
#define NUM 1
#define NAV 2
#define SYM 3
#define FUN 4 
#define CON 5
#define DEF2 6

// Symbols
#define ELIP LA(SEMI)
#define ORD_A LA(N9)
#define ORD_O LA(N0)
#define PARAG LA(N6)

// Custom &sk settings to allow for better handling of Callum Style mods
&sk { // Sticky keys are the closest to Callum's One Shot mods
        release-after-ms = <1000>; // Default is 1000 ms
        quick-release; // Activate on first key down to avoid double shot on the mod as SUch
    };


/ {
    combos {
        compatible = "zmk,combos";
        /* Cheatsheet of numbered key in the Ferris to assit in creating/reading combos
        ╭──────┬──────┬──────┬──────┬──────╮   ╭──────┬──────┬──────┬──────┬──────╮
        │   0  |   1  |   2  |   3  |   4  |   │   5  |   6  |   7  |   8  |   9  |
        ├──────┼──────┼──────┼──────┼──────┤   ├──────┼──────┼──────┼──────┼──────┤
        │  10  |  11  |  12  |  13  |  14  |   │  15  |  16  |  17  |  18  |  19  |
        ├──────┼──────┼──────┼──────┼──────┤   ├──────┼──────┼──────┼──────┼──────┤
        │  20  |  21  |  22  |  23  |  24  |   │  25  |  26  |  27  |  28  |  29  |
        ╰──────┴──────┴──────┼──────┼──────┤   ├──────┼──────┼──────┴──────┴──────╯
                             |  30  |  31  |   |  32  |  33  |
                             ╰──────┴──────╯   ╰──────┴──────╯ */
    

        // Layer combos
        combo_config_layer { // Hosts Bootoader and bluetooth profiles keyts in ZMK firmware
            timeout-ms = <100>;
            key-positions = <21 12 23>; // ^ shape in the botton midle of left hand
            layers = <NAV CON>; // Only available in NAV layer to allow for left-handed activation and avoid trigger while typing in DEF
            bindings = <&to CON>;
        };
        combo_num_layer_toggle { 
            timeout-ms = <100>;
            key-positions = <32 33>; // Right thumb keys 
            layers = <DEF NAV NUM>;
            bindings = <&tog NUM>;
        };
        combo_nav_layer_toggle { 
            timeout-ms = <100>;
            key-positions = <30 31>; // Left thumb keys
            layers = <DEF NAV NUM>; 
            bindings = <&tog NAV>;
        };
        
        // Keyboard features
        combo_enter {
            timeout-ms = <50>;
            key-positions = <16 17>; // J K
            layers = <DEF NAV NUM>;
            bindings = <&kp ENTER>;
        };
        combo_repeat {
            timeout-ms = <50>;
            key-positions = <6 7>; // J K
            layers = <DEF NAV NUM>;
            bindings = <&key_repeat>;
        };
        
        // macOS Hotkey combos
        combo_spotlight_alfred {
            timeout-ms = <50>;
            key-positions = <13 16>; // F J
            layers = <DEF>; // Only available in the DEF layer
            bindings = <&kp ALFRED>;
        };
        combo_shortcat {
            timeout-ms = <50>;
            key-positions = <12 17>; // D K
            layers = <DEF>; // Only available in the DEF layer
            bindings = <&kp SHTCAT>;
        };
    };
    
    behaviors {
        ht: hold_tap {
            label = "hold_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <200>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };
        td_cw: tap_dance_caps_word {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_CAPS_WORD";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp LSHFT>, <&caps_word>;
        };
        tdqh: tap_dance_qh { // Quitting apps on Swapper
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_QUIT_HIDE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp Q>, <&kp H>;
        };
        swapper: swapper { // Needed to change west.yml to fetch tri-state behavior from urob's fork of ZMK as it's currently a PR on main ZMK
            compatible = "zmk,behavior-tri-state";
            label = "SWAPPER";
            #binding-cells = <0>;
            bindings = <&kt LCMD>, <&kp TAB>, <&kt LCMD>;
            ignored-key-positions = <7 16 17 18 27>; // Arrow keys and Q/H tap dance to quit/hide apps
        };          
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <NAV SYM>;
            then-layer = <FUN>;
        };
    };

    
    // Macros to allow for modifier cancelation on taping or holding thumb layer keys faking Callum cancel behavior on QMK
    
    macros {
        la_nav: cancel_queued_os_mods_and_toggle_nav {
            label = "LA_NAV";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &mo NAV>
                , <&macro_tap &kp F22>
                , <&macro_pause_for_release>
                , <&macro_release &mo NAV>
                ;
        };
        la_sym: cancel_queued_os_mods_and_toggle_sym {
            label = "LA_SYM";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &mo SYM>
                , <&macro_tap &kp F22>
                , <&macro_pause_for_release>
                , <&macro_release &mo SYM>
                ;
        };
    };


    keymap {
        compatible = "zmk,keymap";
        default_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│  Q       │  W       │  E       │  R       │  T       │   │  Y       │  U       │  I       │  O       │  P       │
            &kp Q      &kp W      &kp E      &kp R      &kp T          &kp Y      &kp U      &kp I      &kp O      &kp P
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  A       │  S       │  D       │  F       │  G       │   │  H       │  J       │  K       │  L       │ ' "      │
             &kp A      &kp S      &kp D      &kp F      &kp G          &kp H     &kp J      &kp K      &kp L      &kp SQT 
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  Z       │  X       │  C       │  V       │  B       │   │  N       │  M       │ , <      │ . >      │ ; :      │
             &kp Z      &kp X      &kp C      &kp V      &kp B         &kp N      &kp M      &kp COMMA  &kp DOT    &kp SEMI
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &la_nav     &td_cw        HYPSPCE    &la_sym 
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };
        
        numword_layer { // combo from W E R keys in DEF
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│          │          │          │          │          │   │          │ 7        │ 8        │ 9        │          |
            &none      &none      &none      &none      &none          &none       &kp N7     &kp N8     &kp N9    &none
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│ CTRL     │ ALT      │ SHIFT    │ CMD      │          │   │          │ 4        │ 5        │ 6        │          │
            &sk LCTRL  &sk LALT   &sk LSHFT  &sk LGUI   &none          &none      &kp N4     &kp N5     &kp N6     &none
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│          │          │          │          │          │   │          │ 1        │ 2        │ 3        │          |
            &none      &none      &none      &none      &none          &none      &kp N1     &kp N2     &kp N3     &none
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &trans     &mo DEF2        &to DEF    &lt SYM N0
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };
        
        left_nav_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│ TAB      │ Swapper  │ Prev. tab│ Next tab │          │   │          │ PG DOWN  │ UP       │ PG UP    │ BACKSPACE│
            &kp TAB    &swapper   CO_PTAB     CO_NTAB   &none          &none      &kp PG_DN  &kp UARW   &kp PG_UP  &kp BSPC
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│ CTRL     │ ALT      │ SHIFT    │ CMD      │ CAPS LOCK│   │          │ LEFT     │ DOWN     │ RIGHT    │ ENTER    │
            &sk LCTRL  &sk LALT   &sk LSHFT  &sk LGUI   &sk CAPS       &none      &kp LARW   &kp DARW   &kp RARW   &kp ENTER
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│ UNDO     │ CUT      │ COPY     │ PASTE    |          │   │ BACK     │ FORWARD  │ Q / H    │ REPEAT   │ DELETE   │
            &kp LG(Z)  &kp LG(X)  &kp LG(C)  &kp LG(V)  &none          GO_BACK    GO_FWRD    &tdqh     &key_repeat &kp DEL
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &trans     &trans         &trans     &la_sym
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };

        right_symbols_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│ ESC      │  {       │  [       │  (       │ ~        │   │ ^        │ )        │ ]        │ }        │  `       │
            &kp ESC    &kp LBRC   &kp LBKT   &kp LPAR   &kp TILDE      &kp CARET  &kp RPAR   &kp RBKT   &kp RBRC   &kp GRAVE
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│ -        │ *        │ =        │ _        │ $        │   │ #        │ CMD      │ SHIFT    │ ALT      │ CTRL     │
            &kp MINUS  &kp ASTRK  &kp EQUAL  &kp UNDER  &kp DLLR       &kp HASH   &sk LGUI   &sk LSHFT  &sk LALT   &sk LCTRL
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│ +        │ |        │  @       │  /       │  %       │   │ §        │ \        │ &        │ ?        │ !        │
            &kp PLUS   &kp PIPE   &kp AT     &kp FSLH   &kp PRCNT      &kp PARAG  &kp BSLH   &kp AMPS   &kp QMARK  &kp EXCL
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &trans     &trans         &trans     &trans
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };

        fun_num_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│ 1        │ 2        │ 3        │ 4        │ 5        │   │ 6        │ 7        │ 8        │ 9        │ 0        │
            &kp N1     &kp N2     &kp N3     &kp N4    &kp N5          &kp N6     &kp N7     &kp N8     &kp N9     &kp N0
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│ CTRL     │ ALT      │ SHIFT    │ CMD      │ F11      │   │ F12      │ CMD      │ SHIFT    │ ALT      │ CTRL     │
            &sk LCTRL  &sk LALT   &sk LSHFT  &sk LGUI   &kp F11        &kp F12    &sk LGUI   &sk LSHFT  &sk LALT   &sk LCTRL
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│ F1       │ F2       │ F3       │ F4       │ F5       │   │ F6       │ F7       │ F8       │ F9       │ F10      │
            &kp F1     &kp F2     &kp F3     &kp F4    &kp F5          &kp F6     &kp F7     &kp F8     &kp F9     &kp F10
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &trans     &trans         &trans     &trans
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };
          
        keyboard_config_layer { // Access from NAV with ^ claw combo
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│          │          │          │          │PROFILE 0 │   │PROFILE 3 │          │          │          │          |
            &none      &none      &none      &none      &bt BT0        &bt BT3    &none      &none      &none       &none
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│BOOTLOADER│          │          │          │PROFILE 1 │   │PROFILE 4 │          │          │          │BOOTLOADER
          &bootloader  &none      &none      &none      &bt BT1        &bt BT4    &none      &none      &none     &bootloader
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│ CLEAR BT │          │          │          │PROFILE 2 │   │PROFILE 5 │          │          │          │
           &bt BT_CLR  &none      &none      &none      &bt BT2        &bt BT5     &none      &none      &none      &none 
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &la_nav    &to DEF        &to DEF    &la_sym
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };
        
        default_layer_again { // to allow for &mo DEF2 activation from lower layers such as numpad
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│  Q       │  W       │  E       │  R       │  T       │   │  Y       │  U       │  I       │  O       │  P       │
            &kp Q      &kp W      &kp E      &kp R      &kp T          &kp Y      &kp U      &kp I      &kp O      &kp P
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  A       │  S       │  D       │  F       │  G       │   │  H       │  J       │  K       │  L       │ ' "      │
             &kp A      &kp S      &kp D      &kp F      &kp G          &kp H     &kp J      &kp K      &kp L      &kp SQT 
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  Z       │  X       │  C       │  V       │  B       │   │  N       │  M       │ , <      │ . >      │ ; :      │
             &kp Z      &kp X      &kp C      &kp V      &kp B         &kp N      &kp M      &kp COMMA  &kp DOT    &kp SEMI
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &la_nav     &td_cw        HYPSPCE    &la_sym 
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };

       
    };
};